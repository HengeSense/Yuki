(dp1
S'output'
p2
S"<type 'exceptions.IOError'> [Errno 2] No such file or directory: 'C:/Users/Bussiere/Dropbox/Projets/Yuki/web2py/applications/README\\\\DISABLED'"
p3
sS'layer'
p4
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\applications\\admin\\controllers/default.py'
p5
sS'code'
p6
S'# coding: utf8\n\nEXPERIMENTAL_STUFF = True\n\nif EXPERIMENTAL_STUFF:\n    is_mobile = request.user_agent().is_mobile\n    if is_mobile:\n        response.view = response.view.replace(\'default/\',\'default.mobile/\')\n        response.menu = []\n\nfrom gluon.admin import *\nfrom gluon.fileutils import abspath, read_file, write_file\nfrom glob import glob\nimport shutil\nimport platform\n\nif DEMO_MODE and request.function in [\'change_password\',\'pack\',\'pack_plugin\',\'upgrade_web2py\',\'uninstall\',\'cleanup\',\'compile_app\',\'remove_compiled_app\',\'delete\',\'delete_plugin\',\'create_file\',\'upload_file\',\'update_languages\',\'reload_routes\']:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\nif not is_manager() and request.function in [\'change_password\',\'upgrade_web2py\']:\n    session.flash = T(\'disabled in multi user mode\')\n    redirect(URL(\'site\'))\n\nif FILTER_APPS and request.args(0) and not request.args(0) in FILTER_APPS:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\ndef safe_open(a,b):\n    if DEMO_MODE and \'w\' in b:\n        class tmp:\n            def write(self,data): pass\n        return tmp()\n    return open(a,b)\n\ndef safe_read(a, b=\'r\'):\n    safe_file = safe_open(a, b)\n    try:\n        return safe_file.read()\n    finally:\n        safe_file.close()\n\ndef safe_write(a, value, b=\'w\'):\n    safe_file = safe_open(a, b)\n    try:\n        safe_file.write(value)\n    finally:\n        safe_file.close()\n\ndef get_app(name=None):\n    app = name or request.args(0)\n    if app and (not MULTI_USER_MODE or db(db.app.name==app)(db.app.owner==auth.user.id).count()):\n        return app\n    session.flash = \'App does not exist or your are not authorized\'\n    redirect(URL(\'site\'))\n\ndef index():\n    """ Index handler """\n\n    send = request.vars.send\n    if DEMO_MODE:\n        session.authorized = True\n        session.last_time = t0\n    if not send:\n        send = URL(\'site\')\n    if session.authorized:\n        redirect(send)\n    elif request.vars.password:\n        if verify_password(request.vars.password):\n            session.authorized = True\n            login_record(True)\n\n            if CHECK_VERSION:\n                session.check_version = True\n            else:\n                session.check_version = False\n\n            session.last_time = t0\n            if isinstance(send, list):  # ## why does this happen?\n                send = str(send[0])\n\n            redirect(send)\n        else:\n            times_denied = login_record(False)\n            if times_denied >= allowed_number_of_attempts:\n                response.flash = \\\n                    T(\'admin disabled because too many invalid login attempts\')\n            elif times_denied == allowed_number_of_attempts - 1:\n                response.flash = \\\n                    T(\'You have one more login attempt before you are locked out\')\n            else:\n                response.flash = T(\'invalid password.\')\n    return dict(send=send)\n\n\ndef check_version():\n    """ Checks if web2py is up to date """\n\n    session.forget()\n    session._unlock(response)\n\n    new_version, version_number = check_new_version(request.env.web2py_version,\n                                    WEB2PY_VERSION_URL)\n\n    if new_version == -1:\n        return A(T(\'Unable to check for upgrades\'), _href=WEB2PY_URL)\n    elif new_version != True:\n        return A(T(\'web2py is up to date\'), _href=WEB2PY_URL)\n    elif platform.system().lower() in (\'windows\',\'win32\',\'win64\') and os.path.exists("web2py.exe"):\n        return SPAN(\'You should upgrade to version %s\' % version_number)\n    else:\n        return sp_button(URL(\'upgrade_web2py\'), T(\'upgrade now\')) \\\n          + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)\n\n\ndef logout():\n    """ Logout handler """\n    session.authorized = None\n    if MULTI_USER_MODE:\n        redirect(URL(\'user/logout\'))\n    redirect(URL(\'index\'))\n\n\ndef change_password():\n\n    if session.pam_user:\n        session.flash = T(\'PAM authenticated user, cannot change password here\')\n        redirect(URL(\'site\'))\n    form=SQLFORM.factory(Field(\'current_admin_password\',\'password\'),\n                         Field(\'new_admin_password\',\'password\',requires=IS_STRONG()),\n                         Field(\'new_admin_password_again\',\'password\'))\n    if form.accepts(request.vars):\n        if not verify_password(request.vars.current_admin_password):\n            form.errors.current_admin_password = T(\'invalid password\')\n        elif form.vars.new_admin_password != form.vars.new_admin_password_again:\n            form.errors.new_admin_password_again = T(\'no match\')\n        else:\n            path = abspath(\'parameters_%s.py\' % request.env.server_port)\n            safe_write(path, \'password="%s"\' % CRYPT()(request.vars.new_admin_password)[0])\n            session.flash = T(\'password changed\')\n            redirect(URL(\'site\'))\n    return dict(form=form)\n\ndef site():\n    """ Site handler """\n\n    myversion = request.env.web2py_version\n\n    # Shortcut to make the elif statements more legible\n    file_or_appurl = \'file\' in request.vars or \'appurl\' in request.vars\n\n    if DEMO_MODE:\n        pass\n\n    elif request.vars.filename and not \'file\' in request.vars:\n        # create a new application\n        appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n        if app_create(appname, request):\n            if MULTI_USER_MODE:\n                db.app.insert(name=appname,owner=auth.user.id)\n            session.flash = T(\'new application "%s" created\', appname)\n            redirect(URL(\'design\',args=appname))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s" (it may exist already)\', request.vars.filename)\n        redirect(URL(r=request))\n\n    elif file_or_appurl and not request.vars.filename:\n        # can\'t do anything without an app name\n        msg = \'you must specify a name for the uploaded application\'\n        response.flash = T(msg)\n\n    elif file_or_appurl and request.vars.filename:\n        # fetch an application via URL or file upload\n        f = None\n        if request.vars.appurl is not \'\':\n            try:\n                f = urllib.urlopen(request.vars.appurl)\n            except Exception, e:\n                session.flash = DIV(T(\'Unable to download app because:\'),PRE(str(e)))\n                redirect(URL(r=request))\n            fname = request.vars.appurl\n        elif request.vars.file is not \'\':\n            f = request.vars.file.file\n            fname = request.vars.file.filename\n\n        if f:\n            appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n            installed = app_install(appname, f, request, fname,\n                                    overwrite=request.vars.overwrite_check)\n        if f and installed:\n            msg = \'application %(appname)s installed with md5sum: %(digest)s\'\n            session.flash = T(msg, dict(appname=appname,\n                                        digest=md5_hash(installed)))\n        elif f and request.vars.overwrite_check:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        else:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        redirect(URL(r=request))\n\n    regex = re.compile(\'^\\w+$\')\n\n    if is_manager():\n        apps = [f for f in os.listdir(apath(r=request)) if regex.match(f)]\n    else:\n        apps = [f.name for f in db(db.app.owner==auth.user_id).select()]\n\n    if FILTER_APPS:\n        apps = [f for f in apps if f in FILTER_APPS]\n\n    apps = sorted(apps,lambda a,b:cmp(a.upper(),b.upper()))\n\n    return dict(app=None, apps=apps, myversion=myversion)\n\n\ndef pack():\n    app = get_app()\n\n    if len(request.args) == 1:\n        fname = \'web2py.app.%s.w2p\' % app\n        filename = app_pack(app, request)\n    else:\n        fname = \'web2py.app.%s.compiled.w2p\' % app\n        filename = app_pack_compiled(app, request)\n\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'site\'))\n\ndef pack_plugin():\n    app = get_app()\n    if len(request.args) == 2:\n        fname = \'web2py.plugin.%s.w2p\' % request.args[1]\n        filename = plugin_pack(app, request.args[1], request)\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'plugin\',args=request.args))\n\ndef upgrade_web2py():\n    if \'upgrade\' in request.vars:\n        (success, error) = upgrade(request)\n        if success:\n            session.flash = T(\'web2py upgraded; please restart it\')\n        else:\n            session.flash = T(\'unable to upgrade because "%s"\', error)\n        redirect(URL(\'site\'))\n    elif \'noupgrade\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict()\n\ndef uninstall():\n    app = get_app()\n    if \'delete\' in request.vars:\n        if MULTI_USER_MODE:\n            if is_manager() and db(db.app.name==app).delete():\n                pass\n            elif db(db.app.name==app)(db.app.owner==auth.user.id).delete():\n                pass\n            else:\n                session.flash = T(\'no permission to uninstall "%s"\', app)\n                redirect(URL(\'site\'))\n        if app_uninstall(app, request):\n            session.flash = T(\'application "%s" uninstalled\', app)\n        else:\n            session.flash = T(\'unable to uninstall "%s"\', app)\n        redirect(URL(\'site\'))\n    elif \'nodelete\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict(app=app)\n\n\ndef cleanup():\n    app = get_app()\n    clean = app_cleanup(app, request)\n    if not clean:\n        session.flash = T("some files could not be removed")\n    else:\n        session.flash = T(\'cache, errors and sessions cleaned\')\n\n    redirect(URL(\'site\'))\n\n\ndef compile_app():\n    app = get_app()\n    c = app_compile(app, request)\n    if not c:\n        session.flash = T(\'application compiled\')\n    else:\n        session.flash = DIV(T(\'Cannot compile: there are errors in your app:\'),\n                              CODE(c))\n    redirect(URL(\'site\'))\n\n\ndef remove_compiled_app():\n    """ Remove the compiled application """\n    app = get_app()\n    remove_compiled_application(apath(app, r=request))\n    session.flash = T(\'compiled application removed\')\n    redirect(URL(\'site\'))\n\ndef delete():\n    """ Object delete handler """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    sender = request.vars.sender\n\n    if isinstance(sender, list):  # ## fix a problem with Vista\n        sender = sender[0]\n\n    if \'nodelete\' in request.vars:\n        redirect(URL(sender))\n    elif \'delete\' in request.vars:\n        try:\n            os.unlink(apath(filename, r=request))\n            session.flash = T(\'file "%(filename)s" deleted\',\n                              dict(filename=filename))\n        except Exception:\n            session.flash = T(\'unable to delete file "%(filename)s"\',\n                              dict(filename=filename))\n        redirect(URL(sender))\n    return dict(filename=filename, sender=sender)\n\ndef enable():\n    app = get_app()\n    filename = os.path.join(apath(app, r=request),\'DISABLED\')\n    if os.path.exists(filename):\n        os.unlink(filename)\n        return SPAN(T(\'Disable\'),_style=\'color:green\')\n    else:\n        open(filename,\'wb\').write(time.ctime())\n        return SPAN(T(\'Enable\'),_style=\'color:red\')\n\ndef peek():\n    """ Visualize object code """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    try:\n        data = safe_read(apath(filename, r=request)).replace(\'\\r\',\'\')\n    except IOError:\n        session.flash = T(\'file does not exist\')\n        redirect(URL(\'site\'))\n\n    extension = filename[filename.rfind(\'.\') + 1:].lower()\n\n    return dict(app=request.args[0],\n                filename=filename,\n                data=data,\n                extension=extension)\n\n\ndef test():\n    """ Execute controller tests """\n    app = get_app()\n    if len(request.args) > 1:\n        file = request.args[1]\n    else:\n        file = \'.*\\.py\'\n\n    controllers = listdir(apath(\'%s/controllers/\' % app, r=request), file + \'$\')\n\n    return dict(app=app, controllers=controllers)\n\ndef keepalive():\n    return \'\'\n\ndef search():\n    keywords=request.vars.keywords or \'\'\n    app = get_app()\n    def match(filename,keywords):\n        filename=os.path.join(apath(app, r=request),filename)\n        if keywords in read_file(filename,\'rb\'):\n            return True\n        return False\n    path = apath(request.args[0], r=request)\n    files1 = glob(os.path.join(path,\'*/*.py\'))\n    files2 = glob(os.path.join(path,\'*/*.html\'))\n    files3 = glob(os.path.join(path,\'*/*/*.html\'))\n    files=[x[len(path)+1:].replace(\'\\\\\',\'/\') for x in files1+files2+files3 if match(x,keywords)]\n    return response.json({\'files\':files})\n\ndef edit():\n    """ File edit handler """\n    # Load json only if it is ajax edited...\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    # Try to discover the file type\n    if filename[-3:] == \'.py\':\n        filetype = \'python\'\n    elif filename[-5:] == \'.html\':\n        filetype = \'html\'\n    elif filename[-5:] == \'.load\':\n        filetype = \'html\'\n    elif filename[-4:] == \'.css\':\n        filetype = \'css\'\n    elif filename[-3:] == \'.js\':\n        filetype = \'js\'\n    else:\n        filetype = \'html\'\n\n    # ## check if file is not there\n\n    path = apath(filename, r=request)\n\n    if (\'revert\' in request.vars) and os.path.exists(path + \'.bak\'):\n        try:\n            data = safe_read(path + \'.bak\')\n            data1 = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                 return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        safe_write(path, data)\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n        safe_write(path + \'.bak\', data1)\n        response.flash = T(\'file "%s" of %s restored\', (filename, saved_on))\n    else:\n        try:\n            data = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n\n        if request.vars.file_hash and request.vars.file_hash != file_hash:\n            session.flash = T(\'file changed on disk\')\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path + \'.1\', data)\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'file changed on disk\')),\n                                      \'redirect\': URL(\'resolve\',\n                                                      args=request.args)})\n            else:\n                redirect(URL(\'resolve\', args=request.args))\n        elif request.vars.data:\n            safe_write(path + \'.bak\', data)\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path, data)\n            file_hash = md5_hash(data)\n            saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n            response.flash = T(\'file saved on %s\', saved_on)\n\n    data_or_revert = (request.vars.data or request.vars.revert)\n\n    # Check compile errors\n    highlight = None\n    if filetype == \'python\' and request.vars.data:\n        import _ast\n        try:\n            code = request.vars.data.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\'\n            compile(code, path, "exec", _ast.PyCF_ONLY_AST)\n        except Exception, e:\n            start = sum([len(line)+1 for l, line\n                            in enumerate(request.vars.data.split("\\n"))\n                            if l < e.lineno-1])\n            if e.text and e.offset:\n                offset = e.offset - (len(e.text) - len(e.text.splitlines()[-1]))\n            else:\n                offset = 0\n            highlight = {\'start\': start, \'end\': start + offset + 1}\n            try:\n                ex_name = e.__class__.__name__\n            except:\n                ex_name = \'unknown exception!\'\n            response.flash = DIV(T(\'failed to compile file because:\'), BR(),\n                                 B(ex_name), T(\' at line %s\') % e.lineno,\n                                 offset and T(\' at char %s\') % offset or \'\',\n                                 PRE(str(e)))\n\n    if data_or_revert and request.args[1] == \'modules\':\n        # Lets try to reload the modules\n        try:\n            mopath = \'.\'.join(request.args[2:])[:-3]\n            exec \'import applications.%s.modules.%s\' % (request.args[0], mopath)\n            reload(sys.modules[\'applications.%s.modules.%s\'\n                    % (request.args[0], mopath)])\n        except Exception, e:\n            response.flash = DIV(T(\'failed to reload module because:\'),PRE(str(e)))\n\n    edit_controller = None\n    editviewlinks = None\n    view_link = None\n    if filetype == \'html\' and len(request.args) >= 3:\n        cfilename = os.path.join(request.args[0], \'controllers\',\n                                 request.args[2] + \'.py\')\n        if os.path.exists(apath(cfilename, r=request)):\n            edit_controller = URL(\'edit\', args=[cfilename])\n            view = request.args[3].replace(\'.html\',\'\')\n            view_link = URL(request.args[0],request.args[2],view)\n    elif filetype == \'python\' and request.args[1] == \'controllers\':\n        ## it\'s a controller file.\n        ## Create links to all of the associated view files.\n        app = get_app()\n        viewname = os.path.splitext(request.args[2])[0]\n        viewpath = os.path.join(app,\'views\',viewname)\n        aviewpath = apath(viewpath, r=request)\n        viewlist = []\n        if os.path.exists(aviewpath):\n            if os.path.isdir(aviewpath):\n                viewlist = glob(os.path.join(aviewpath,\'*.html\'))\n        elif os.path.exists(aviewpath+\'.html\'):\n            viewlist.append(aviewpath+\'.html\')\n        if len(viewlist):\n            editviewlinks = []\n            for v in viewlist:\n                vf = os.path.split(v)[-1]\n                vargs = "/".join([viewpath.replace(os.sep,"/"),vf])\n                editviewlinks.append(A(T(vf.split(".")[0]),\\\n                    _href=URL(\'edit\',args=[vargs])))\n\n    if len(request.args) > 2 and request.args[1] == \'controllers\':\n        controller = (request.args[2])[:-3]\n        functions = regex_expose.findall(data)\n    else:\n        (controller, functions) = (None, None)\n\n    if \'from_ajax\' in request.vars:\n        return response.json({\'file_hash\': file_hash, \'saved_on\': saved_on, \'functions\':functions, \'controller\': controller, \'application\': request.args[0], \'highlight\': highlight })\n    else:\n\n        editarea_preferences = {}\n        editarea_preferences[\'FONT_SIZE\'] = \'10\'\n        editarea_preferences[\'FULL_SCREEN\'] = \'false\'\n        editarea_preferences[\'ALLOW_TOGGLE\'] = \'true\'\n        editarea_preferences[\'REPLACE_TAB_BY_SPACES\'] = \'4\'\n        editarea_preferences[\'DISPLAY\'] = \'onload\'\n        for key in editarea_preferences:\n            if globals().has_key(key):\n                editarea_preferences[key]=globals()[key]\n        return dict(app=request.args[0],\n                    filename=filename,\n                    filetype=filetype,\n                    data=data,\n                    edit_controller=edit_controller,\n                    file_hash=file_hash,\n                    saved_on=saved_on,\n                    controller=controller,\n                    functions=functions,\n                    view_link=view_link,\n                    editarea_preferences=editarea_preferences,\n                    editviewlinks=editviewlinks)\n\ndef resolve():\n    """\n    """\n\n    filename = \'/\'.join(request.args)\n    # ## check if file is not there\n    path = apath(filename, r=request)\n    a = safe_read(path).split(\'\\n\')\n    try:\n        b = safe_read(path + \'.1\').split(\'\\n\')\n    except IOError:\n        session.flash = \'Other file, no longer there\'\n        redirect(URL(\'edit\', args=request.args))\n\n    d = difflib.ndiff(a, b)\n\n    def leading(line):\n        """  """\n\n        # TODO: we really need to comment this\n        z = \'\'\n        for (k, c) in enumerate(line):\n            if c == \' \':\n                z += \'&nbsp;\'\n            elif c == \' \\t\':\n                z += \'&nbsp;\'\n            elif k == 0 and c == \'?\':\n                pass\n            else:\n                break\n\n        return XML(z)\n\n    def getclass(item):\n        """ Determine item class """\n\n        if item[0] == \' \':\n            return \'normal\'\n        if item[0] == \'+\':\n            return \'plus\'\n        if item[0] == \'-\':\n            return \'minus\'\n\n    if request.vars:\n        c = \'\\n\'.join([item[2:].rstrip() for (i, item) in enumerate(d) if item[0] \\\n                           == \' \' or \'line%i\' % i in request.vars])\n        safe_write(path, c)\n        session.flash = \'files merged\'\n        redirect(URL(\'edit\', args=request.args))\n    else:\n        # Making the short circuit compatible with <= python2.4\n        gen_data = lambda index,item: not item[:1] in [\'+\',\'-\'] and "" \\\n                   or INPUT(_type=\'checkbox\',\n                            _name=\'line%i\' % index,\n                            value=item[0] == \'+\')\n\n        diff = TABLE(*[TR(TD(gen_data(i,item)),\n                          TD(item[0]),\n                          TD(leading(item[2:]),\n                          TT(item[2:].rstrip())), _class=getclass(item))\n                       for (i, item) in enumerate(d) if item[0] != \'?\'])\n\n    return dict(diff=diff, filename=filename)\n\n\ndef edit_language():\n    """ Edit language file """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    from gluon.languages import read_dict, write_dict\n    strings = read_dict(apath(filename, r=request))\n    keys = sorted(strings.keys(),lambda x,y: cmp(x.lower(), y.lower()))\n    rows = []\n    rows.append(H2(T(\'Original/Translation\')))\n\n    for key in keys:\n        name = md5_hash(key)\n        if key==strings[key]:\n            _class=\'untranslated\'\n        else:\n            _class=\'translated\'\n        if len(key) <= 40:\n            elem = INPUT(_type=\'text\', _name=name,value=strings[key],\n                         _size=70,_class=_class)\n        else:\n            elem = TEXTAREA(_name=name, value=strings[key], _cols=70,\n                            _rows=5, _class=_class)\n\n        # Making the short circuit compatible with <= python2.4\n        k = (strings[key] != key) and key or B(key)\n\n        rows.append(P(k, BR(), elem, TAG.BUTTON(T(\'delete\'),\n                            _onclick=\'return delkey("%s")\' % name), _id=name))\n\n    rows.append(INPUT(_type=\'submit\', _value=T(\'update\')))\n    form = FORM(*rows)\n    if form.accepts(request.vars, keepvalues=True):\n        strs = dict()\n        for key in keys:\n            name = md5_hash(key)\n            if form.vars[name]==chr(127): continue\n            strs[key] = form.vars[name]\n        write_dict(apath(filename, r=request), strs)\n        session.flash = T(\'file saved on %(time)s\', dict(time=time.ctime()))\n        redirect(URL(r=request,args=request.args))\n    return dict(app=request.args[0], filename=filename, form=form)\n\n\ndef about():\n    """ Read about info """\n    app = get_app()\n    # ## check if file is not there\n    about = safe_read(apath(\'%s/ABOUT\' % app, r=request))\n    license = safe_read(apath(\'%s/LICENSE\' % app, r=request))\n    return dict(app=app, about=MARKMIN(about), license=MARKMIN(license))\n\n\ndef design():\n    """ Application design handler """\n    app = get_app()\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    if request.vars.pluginfile!=None and not isinstance(request.vars.pluginfile,str):\n        filename=os.path.basename(request.vars.pluginfile.filename)\n        if plugin_install(app, request.vars.pluginfile.file,\n                          request, filename):\n            session.flash = T(\'new plugin installed\')\n            redirect(URL(\'design\',args=app))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s"\', request.vars.filename)\n        redirect(URL(r=request))\n    elif isinstance(request.vars.pluginfile,str):\n        session.flash = T(\'plugin not specified\')\n        redirect(URL(r=request))\n\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+(\\.\\w+)+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views if not x.endswith(\'.bak\')]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    cronfolder = apath(\'%s/cron\' % app, r=request)\n    if not os.path.exists(cronfolder): os.mkdir(cronfolder)\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    plugins=[]\n    def filter_plugins(items,plugins):\n        plugins+=[item[7:].split(\'/\')[0].split(\'.\')[0] for item in items if item.startswith(\'plugin_\')]\n        plugins[:]=list(set(plugins))\n        plugins.sort()\n        return [item for item in items if not item.startswith(\'plugin_\')]\n\n    return dict(app=app,\n                models=filter_plugins(models,plugins),\n                defines=defines,\n                controllers=filter_plugins(controllers,plugins),\n                functions=functions,\n                views=filter_plugins(views,plugins),\n                modules=filter_plugins(modules,plugins),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics,plugins),\n                languages=languages,\n                crontab=crontab,\n                plugins=plugins)\n\ndef delete_plugin():\n    """ Object delete handler """\n    app=request.args(0)\n    plugin = request.args(1)\n    plugin_name=\'plugin_\'+plugin\n    if \'nodelete\' in request.vars:\n        redirect(URL(\'design\',args=app))\n    elif \'delete\' in request.vars:\n        try:\n            for folder in [\'models\',\'views\',\'controllers\',\'static\',\'modules\']:\n                path=os.path.join(apath(app,r=request),folder)\n                for item in os.listdir(path):\n                    if item.rsplit(\'.\',1)[0] == plugin_name:\n                        filename=os.path.join(path,item)\n                        if os.path.isdir(filename):\n                            shutil.rmtree(filename)\n                        else:\n                            os.unlink(filename)\n            session.flash = T(\'plugin "%(plugin)s" deleted\',\n                              dict(plugin=plugin))\n        except Exception:\n            session.flash = T(\'unable to delete file plugin "%(plugin)s"\',\n                              dict(plugin=plugin))\n        redirect(URL(\'design\',args=request.args(0)))\n    return dict(plugin=plugin)\n\ndef plugin():\n    """ Application design handler """\n    app = get_app()\n    plugin = request.args(1)\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+\\.\\w+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    def filter_plugins(items):\n        regex=re.compile(\'^plugin_\'+plugin+\'(/.*|\\..*)?$\')\n        return [item for item in items if regex.match(item)]\n\n    return dict(app=app,\n                models=filter_plugins(models),\n                defines=defines,\n                controllers=filter_plugins(controllers),\n                functions=functions,\n                views=filter_plugins(views),\n                modules=filter_plugins(modules),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics),\n                languages=languages,\n                crontab=crontab)\n\n\ndef create_file():\n    """ Create files handler """\n    try:\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n        filename = re.sub(\'[^\\w./-]+\', \'_\', request.vars.filename)\n\n        if path[-11:] == \'/languages/\':\n            # Handle language files\n            if len(filename) == 0:\n                raise SyntaxError\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n            app = path.split(\'/\')[-3]\n            path=os.path.join(apath(app, r=request),\'languages\',filename)\n            if not os.path.exists(path):\n                safe_write(path, \'\')\n            findT(apath(app, r=request), filename[:-3])\n            session.flash = T(\'language file "%(filename)s" created/updated\',\n                              dict(filename=filename))\n            redirect(request.vars.sender)\n\n        elif path[-8:] == \'/models/\':\n            # Handle python models\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n\'\n\n        elif path[-13:] == \'/controllers/\':\n            # Handle python controllers\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n# %s\\ndef index(): return dict(message="hello from %s")\'\n            text = text % (T(\'try something like\'), filename)\n\n        elif path[-7:] == \'/views/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle template (html) views\n            if filename.find(\'.\')<0:\n                filename += \'.html\'\n            extension = filename.split(\'.\')[-1].lower()\n\n            if len(filename) == 5:\n                raise SyntaxError\n\n            msg = T(\'This is the %(filename)s template\',\n                    dict(filename=filename))\n            if extension == \'html\':\n                text = dedent("""\n                   {{extend \'layout.html\'}}\n                   <h1>%s</h1>\n                   {{=BEAUTIFY(response._vars)}}""" % msg)\n            else:\n                generic = os.path.join(path,\'generic.\'+extension)\n                if os.path.exists(generic):\n                    text = read_file(generic)\n                else:\n                    text = \'\'\n\n        elif path[-9:] == \'/modules/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle python module files\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = dedent("""\n                   #!/usr/bin/env python\n                   # coding: utf8\n                   from gluon import *\\n""")\n\n        elif path[-8:] == \'/static/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            text = \'\'\n        else:\n            redirect(request.vars.sender)\n\n        full_filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(full_filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        if os.path.exists(full_filename):\n            raise SyntaxError\n\n        safe_write(full_filename, text)\n        session.flash = T(\'file "%(filename)s" created\',\n                          dict(filename=full_filename[len(path):]))\n        redirect(URL(\'edit\',\n                 args=[os.path.join(request.vars.location, filename)]))\n    except Exception, e:\n        if not isinstance(e,HTTP):\n            session.flash = T(\'cannot create file\')\n\n    redirect(request.vars.sender)\n\n\ndef upload_file():\n    """ File uploading handler """\n\n    try:\n        filename = None\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n\n        if request.vars.filename:\n            filename = re.sub(\'[^\\w\\./]+\', \'_\', request.vars.filename)\n        else:\n            filename = os.path.split(request.vars.file.filename)[-1]\n\n        if path[-8:] == \'/models/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-9:] == \'/modules/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-13:] == \'/controllers/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-7:] == \'/views/\' and not filename[-5:] == \'.html\':\n            filename += \'.html\'\n\n        if path[-11:] == \'/languages/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        safe_write(filename, request.vars.file.file.read(), \'wb\')\n        session.flash = T(\'file "%(filename)s" uploaded\',\n                          dict(filename=filename[len(path):]))\n    except Exception:\n        if filename:\n            d = dict(filename = filename[len(path):])\n        else:\n            d = dict(filename = \'unkown\')\n        session.flash = T(\'cannot upload file "%(filename)s"\', d)\n\n    redirect(request.vars.sender)\n\n\ndef errors():\n    """ Error handler """\n    import operator\n    import os\n    import pickle\n    import hashlib\n\n    app = get_app()\n\n    method = request.args(1) or \'new\'\n    db_ready = {}\n    db_ready[\'status\'] = get_ticket_storage(app)\n    db_ready[\'errmessage\'] = "No ticket_storage.txt found under /private folder"\n    db_ready[\'errlink\'] = "http://web2py.com/books/default/chapter/29/13#Collecting-tickets"\n\n    if method == \'new\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in listdir(errors_path, \'^\\w.*\'):\n            fullpath = os.path.join(errors_path, fn)\n            if not os.path.isfile(fullpath): continue\n            try:\n                fullpath_file = open(fullpath, \'r\')\n                try:\n                    error = pickle.load(fullpath_file)\n                finally:\n                    fullpath_file.close()\n            except IOError:\n                continue\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                os.unlink(fullpath)\n            else:\n                try:\n                    hash2error[hash][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method, db_ready=db_ready)\n\n    elif method == \'dbnew\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n        tk_db, tk_table = get_ticket_storage(app)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in tk_db(tk_table.id>0).select():\n            try:\n                error = pickle.loads(fn.ticket_data)\n            except AttributeError:\n                tk_db(tk_table.id == fn.id).delete()\n                tk_db.commit()\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                tk_db(tk_table.id == fn.id).delete()\n                tk_db.commit()\n            else:\n                try:\n                    hash2error[\'hash\'][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn.ticket_id)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method)\n\n    elif method == \'dbold\':\n        tk_db, tk_table = get_ticket_storage(app)\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                tk_db(tk_table.ticket_id == item[7:]).delete()\n                tk_db.commit()\n        tickets_ = tk_db(tk_table.id>0).select(tk_table.ticket_id, tk_table.created_datetime, orderby=~tk_table.created_datetime)\n        tickets = [row.ticket_id for row in tickets_]\n        times = dict([(row.ticket_id, row.created_datetime) for row in tickets_])\n\n        return dict(app=app, tickets=tickets, method=method, times=times)\n\n    else:\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                os.unlink(apath(\'%s/errors/%s\' % (app, item[7:]), r=request))\n        func = lambda p: os.stat(apath(\'%s/errors/%s\' % \\\n                                           (app, p), r=request)).st_mtime\n        tickets = sorted(listdir(apath(\'%s/errors/\' % app, r=request), \'^\\w.*\'),\n                         key=func,\n                         reverse=True)\n\n        return dict(app=app, tickets=tickets, method=method, db_ready=db_ready)\n\ndef get_ticket_storage(app):\n    private_folder = apath(\'%s/private\' % app, r=request)\n    ticket_file = os.path.join(private_folder, \'ticket_storage.txt\')\n    if os.path.exists(ticket_file):\n        db_string = open(ticket_file).read()\n        db_string = db_string.strip().replace(\'\\r\',\'\').replace(\'\\n\',\'\')\n    else:\n        return False\n    tickets_table = \'web2py_ticket\'\n    tablename = tickets_table + \'_\' + app\n    db_path = apath(\'%s/databases\' % app, r=request)\n    ticketsdb = DAL(db_string, folder=db_path, auto_import=True)\n    if not ticketsdb.get(tablename):\n        table = ticketsdb.define_table(\n                tablename,\n                Field(\'ticket_id\', length=100),\n                Field(\'ticket_data\', \'text\'),\n                Field(\'created_datetime\', \'datetime\'),\n                )\n    return ticketsdb , ticketsdb.get(tablename)\n\ndef make_link(path):\n    """ Create a link from a path """\n    tryFile = path.replace(\'\\\\\', \'/\')\n\n    if os.path.isabs(tryFile) and os.path.isfile(tryFile):\n        (folder, filename) = os.path.split(tryFile)\n        (base, ext) = os.path.splitext(filename)\n        app = get_app()\n\n        editable = {\'controllers\': \'.py\', \'models\': \'.py\', \'views\': \'.html\'}\n        for key in editable.keys():\n            check_extension = folder.endswith("%s/%s" % (app,key))\n            if ext.lower() == editable[key] and check_extension:\n                return A(\'"\' + tryFile + \'"\',\n                         _href=URL(r=request,\n                         f=\'edit/%s/%s/%s\' % (app, key, filename))).xml()\n    return \'\'\n\n\ndef make_links(traceback):\n    """ Make links using the given traceback """\n\n    lwords = traceback.split(\'"\')\n\n    # Making the short circuit compatible with <= python2.4\n    result = (len(lwords) != 0) and lwords[0] or \'\'\n\n    i = 1\n\n    while i < len(lwords):\n        link = make_link(lwords[i])\n\n        if link == \'\':\n            result += \'"\' + lwords[i]\n        else:\n            result += link\n\n            if i + 1 < len(lwords):\n                result += lwords[i + 1]\n                i = i + 1\n\n        i = i + 1\n\n    return result\n\n\nclass TRACEBACK(object):\n    """ Generate the traceback """\n\n    def __init__(self, text):\n        """ TRACEBACK constructor """\n\n        self.s = make_links(CODE(text).xml())\n\n    def xml(self):\n        """ Returns the xml """\n\n        return self.s\n\n\ndef ticket():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    e.load(request, app, ticket)\n\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef ticketdb():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    request.tickets_db = get_ticket_storage(app)[0]\n    e.load(request, app, ticket)\n    response.view = \'default/ticket.html\'\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef error():\n    """ Generate a ticket (for testing) """\n    raise RuntimeError(\'admin ticket generator at your service\')\n\ndef update_languages():\n    """ Update available languages """\n\n    app = get_app()\n    update_all_languages(apath(app, r=request))\n    session.flash = T(\'Language files (static strings) updated\')\n    redirect(URL(\'design\',args=app,anchor=\'languages\'))\n\n\ndef twitter():\n    session.forget()\n    session._unlock(response)\n    import gluon.tools\n    import gluon.contrib.simplejson as sj\n    try:\n        if TWITTER_HASH:\n            page = urllib.urlopen("http://search.twitter.com/search.json?q=%%40%s" % TWITTER_HASH).read()\n            data = sj.loads(page  , encoding="utf-8")[\'results\']\n            d = dict()\n            for e in data:\n                d[e["id"]] = e\n            r = reversed(sorted(d))\n            return dict(tweets = [d[k] for k in r])\n        else:\n            return \'disabled\'\n    except Exception, e:\n        return DIV(T(\'Unable to download because:\'),BR(),str(e))\n\n\ndef user():\n    if MULTI_USER_MODE:\n        if not db(db.auth_user).count():\n            auth.settings.registration_requires_approval = False\n        return dict(form=auth())\n    else:\n        return dict(form=T("Disabled"))\n\ndef reload_routes():\n    """ Reload routes.py """\n    import gluon.rewrite\n    gluon.rewrite.load()\n    redirect(URL(\'site\'))\n\n\n\nresponse._vars=response._caller(enable)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.IOError object at 0x05E8C6C0>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.IOError object at 0x05E8C6C0>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.IOError object at 0x05E8C6C0>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.IOError object at 0x05E8C6C0>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.IOError object at 0x05E8C6C0>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.IOError object at 0x05E8C6C0>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.IOError object at 0x05E8C6C0>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.IOError object at 0x05E8C6C0>"
p27
sS'args'
p28
S"(2, 'No such file or directory')"
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.IOError object at 0x05E8C6C0>"
p31
sS'__class__'
p32
S"<type 'exceptions.IOError'>"
p33
sS'filename'
p34
S"r'C:/Users/Bussiere/Dropbox/Projets/Yuki/web2py/applications/README\\DISABLED'"
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.IOError object at 0x05E8C6C0>"
p37
sS'strerror'
p38
S"'No such file or directory'"
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.IOError object at 0x05E8C6C0>"
p41
sS'errno'
p42
S'2'
sS'__dict__'
p43
S'{}'
p44
sS'__doc__'
p45
S"'I/O operation failed.'"
p46
sS'__init__'
p47
S"<method-wrapper '__init__' of exceptions.IOError object at 0x05E8C6C0>"
p48
sS'__new__'
p49
S'<built-in method __new__ of type object at 0x1E1CD3B0>'
p50
ssS'evalue'
p51
S"[Errno 2] No such file or directory: 'C:/Users/Bussiere/Dropbox/Projets/Yuki/web2py/applications/README\\\\DISABLED'"
p52
sS'request'
p53
ccopy_reg
_reconstructor
p54
(cgluon.html
BEAUTIFY
p55
c__builtin__
object
p56
NtRp57
(dp58
S'attributes'
p59
(dp60
sS'components'
p61
(lp62
g54
(cgluon.html
TABLE
p63
g56
NtRp64
(dp65
g59
(dp66
S'level'
p67
I5
ssS'parent'
p68
Nsg61
(lp69
g54
(cgluon.html
TR
p70
g56
NtRp71
(dp72
g59
(dp73
sg68
g64
sg61
(lp74
g54
(cgluon.html
TD
p75
g56
NtRp76
(dp77
g59
(dp78
S'_style'
p79
S'font-weight:bold;vertical-align:top'
p80
ssg68
g71
sg61
(lp81
S'ajax'
p82
asbag54
(g75
g56
NtRp83
(dp84
g59
(dp85
S'_valign'
p86
S'top'
p87
ssg68
g71
sg61
(lp88
S':'
asbag54
(g75
g56
NtRp89
(dp90
g59
(dp91
sg68
g71
sg61
(lp92
g54
(g55
g56
NtRp93
(dp94
g59
(dp95
g67
I5
ssg68
g89
sg61
(lp96
S'True'
p97
asbasbasbag54
(g70
g56
NtRp98
(dp99
g59
(dp100
sg68
g64
sg61
(lp101
g54
(g75
g56
NtRp102
(dp103
g59
(dp104
g79
g80
ssg68
g98
sg61
(lp105
S'application'
p106
asbag54
(g75
g56
NtRp107
(dp108
g59
(dp109
g86
g87
ssg68
g98
sg61
(lp110
S':'
asbag54
(g75
g56
NtRp111
(dp112
g59
(dp113
sg68
g98
sg61
(lp114
g54
(g55
g56
NtRp115
(dp116
g59
(dp117
g67
I5
ssg68
g111
sg61
(lp118
S'admin'
p119
asbasbasbag54
(g70
g56
NtRp120
(dp121
g59
(dp122
sg68
g64
sg61
(lp123
g54
(g75
g56
NtRp124
(dp125
g59
(dp126
g79
g80
ssg68
g120
sg61
(lp127
g28
asbag54
(g75
g56
NtRp128
(dp129
g59
(dp130
g86
g87
ssg68
g120
sg61
(lp131
S':'
asbag54
(g75
g56
NtRp132
(dp133
g59
(dp134
sg68
g120
sg61
(lp135
g54
(g55
g56
NtRp136
(dp137
g59
(dp138
g67
I5
ssg68
g132
sg61
(lp139
g54
(g63
g56
NtRp140
(dp141
g59
(dp142
g67
I4
ssg68
Nsg61
(lp143
g54
(g70
g56
NtRp144
(dp145
g59
(dp146
sg68
g140
sg61
(lp147
g54
(g75
g56
NtRp148
(dp149
g59
(dp150
sg68
g144
sg61
(lp151
g54
(g55
g56
NtRp152
(dp153
g59
(dp154
g67
I4
ssg68
g148
sg61
(lp155
S'README'
p156
asbasbasbasbasbasbasbag54
(g70
g56
NtRp157
(dp158
g59
(dp159
sg68
g64
sg61
(lp160
g54
(g75
g56
NtRp161
(dp162
g59
(dp163
g79
g80
ssg68
g157
sg61
(lp164
S'body'
p165
asbag54
(g75
g56
NtRp166
(dp167
g59
(dp168
g86
g87
ssg68
g157
sg61
(lp169
S':'
asbag54
(g75
g56
NtRp170
(dp171
g59
(dp172
sg68
g157
sg61
(lp173
g54
(g55
g56
NtRp174
(dp175
g59
(dp176
g67
I5
ssg68
g170
sg61
(lp177
S"<open file '<fdopen>', mode 'w+b' at 0x06000B18>"
p178
asbasbasbag54
(g70
g56
NtRp179
(dp180
g59
(dp181
sg68
g64
sg61
(lp182
g54
(g75
g56
NtRp183
(dp184
g59
(dp185
g79
g80
ssg68
g179
sg61
(lp186
S'client'
p187
asbag54
(g75
g56
NtRp188
(dp189
g59
(dp190
g86
g87
ssg68
g179
sg61
(lp191
S':'
asbag54
(g75
g56
NtRp192
(dp193
g59
(dp194
sg68
g179
sg61
(lp195
g54
(g55
g56
NtRp196
(dp197
g59
(dp198
g67
I5
ssg68
g192
sg61
(lp199
S'127.0.0.1'
p200
asbasbasbag54
(g70
g56
NtRp201
(dp202
g59
(dp203
sg68
g64
sg61
(lp204
g54
(g75
g56
NtRp205
(dp206
g59
(dp207
g79
g80
ssg68
g201
sg61
(lp208
S'controller'
p209
asbag54
(g75
g56
NtRp210
(dp211
g59
(dp212
g86
g87
ssg68
g201
sg61
(lp213
S':'
asbag54
(g75
g56
NtRp214
(dp215
g59
(dp216
sg68
g201
sg61
(lp217
g54
(g55
g56
NtRp218
(dp219
g59
(dp220
g67
I5
ssg68
g214
sg61
(lp221
S'default'
p222
asbasbasbag54
(g70
g56
NtRp223
(dp224
g59
(dp225
sg68
g64
sg61
(lp226
g54
(g75
g56
NtRp227
(dp228
g59
(dp229
g79
g80
ssg68
g223
sg61
(lp230
S'cookies'
p231
asbag54
(g75
g56
NtRp232
(dp233
g59
(dp234
g86
g87
ssg68
g223
sg61
(lp235
S':'
asbag54
(g75
g56
NtRp236
(dp237
g59
(dp238
sg68
g223
sg61
(lp239
g54
(g55
g56
NtRp240
(dp241
g59
(dp242
g67
I5
ssg68
g236
sg61
(lp243
g54
(g63
g56
NtRp244
(dp245
g59
(dp246
g67
I4
ssg68
Nsg61
(lp247
g54
(g70
g56
NtRp248
(dp249
g59
(dp250
sg68
g244
sg61
(lp251
g54
(g75
g56
NtRp252
(dp253
g59
(dp254
g79
g80
ssg68
g248
sg61
(lp255
S'session_id_admin'
p256
asbag54
(g75
g56
NtRp257
(dp258
g59
(dp259
g86
g87
ssg68
g248
sg61
(lp260
S':'
asbag54
(g75
g56
NtRp261
(dp262
g59
(dp263
sg68
g248
sg61
(lp264
g54
(g55
g56
NtRp265
(dp266
g59
(dp267
g67
I4
ssg68
g261
sg61
(lp268
g54
(g63
g56
NtRp269
(dp270
g59
(dp271
g67
I3
ssg68
Nsg61
(lp272
g54
(g70
g56
NtRp273
(dp274
g59
(dp275
sg68
g269
sg61
(lp276
g54
(g75
g56
NtRp277
(dp278
g59
(dp279
g79
g80
ssg68
g273
sg61
(lp280
S'comment'
p281
asbag54
(g75
g56
NtRp282
(dp283
g59
(dp284
g86
g87
ssg68
g273
sg61
(lp285
S':'
asbag54
(g75
g56
NtRp286
(dp287
g59
(dp288
sg68
g273
sg61
(lp289
g54
(g55
g56
NtRp290
(dp291
g59
(dp292
g67
I3
ssg68
g286
sg61
(lp293
S''
asbasbasbag54
(g70
g56
NtRp294
(dp295
g59
(dp296
sg68
g269
sg61
(lp297
g54
(g75
g56
NtRp298
(dp299
g59
(dp300
g79
g80
ssg68
g294
sg61
(lp301
S'domain'
p302
asbag54
(g75
g56
NtRp303
(dp304
g59
(dp305
g86
g87
ssg68
g294
sg61
(lp306
S':'
asbag54
(g75
g56
NtRp307
(dp308
g59
(dp309
sg68
g294
sg61
(lp310
g54
(g55
g56
NtRp311
(dp312
g59
(dp313
g67
I3
ssg68
g307
sg61
(lp314
S''
asbasbasbag54
(g70
g56
NtRp315
(dp316
g59
(dp317
sg68
g269
sg61
(lp318
g54
(g75
g56
NtRp319
(dp320
g59
(dp321
g79
g80
ssg68
g315
sg61
(lp322
S'expires'
p323
asbag54
(g75
g56
NtRp324
(dp325
g59
(dp326
g86
g87
ssg68
g315
sg61
(lp327
S':'
asbag54
(g75
g56
NtRp328
(dp329
g59
(dp330
sg68
g315
sg61
(lp331
g54
(g55
g56
NtRp332
(dp333
g59
(dp334
g67
I3
ssg68
g328
sg61
(lp335
S''
asbasbasbag54
(g70
g56
NtRp336
(dp337
g59
(dp338
sg68
g269
sg61
(lp339
g54
(g75
g56
NtRp340
(dp341
g59
(dp342
g79
g80
ssg68
g336
sg61
(lp343
S'max-age'
p344
asbag54
(g75
g56
NtRp345
(dp346
g59
(dp347
g86
g87
ssg68
g336
sg61
(lp348
S':'
asbag54
(g75
g56
NtRp349
(dp350
g59
(dp351
sg68
g336
sg61
(lp352
g54
(g55
g56
NtRp353
(dp354
g59
(dp355
g67
I3
ssg68
g349
sg61
(lp356
S''
asbasbasbag54
(g70
g56
NtRp357
(dp358
g59
(dp359
sg68
g269
sg61
(lp360
g54
(g75
g56
NtRp361
(dp362
g59
(dp363
g79
g80
ssg68
g357
sg61
(lp364
S'path'
p365
asbag54
(g75
g56
NtRp366
(dp367
g59
(dp368
g86
g87
ssg68
g357
sg61
(lp369
S':'
asbag54
(g75
g56
NtRp370
(dp371
g59
(dp372
sg68
g357
sg61
(lp373
g54
(g55
g56
NtRp374
(dp375
g59
(dp376
g67
I3
ssg68
g370
sg61
(lp377
S''
asbasbasbag54
(g70
g56
NtRp378
(dp379
g59
(dp380
sg68
g269
sg61
(lp381
g54
(g75
g56
NtRp382
(dp383
g59
(dp384
g79
g80
ssg68
g378
sg61
(lp385
S'secure'
p386
asbag54
(g75
g56
NtRp387
(dp388
g59
(dp389
g86
g87
ssg68
g378
sg61
(lp390
S':'
asbag54
(g75
g56
NtRp391
(dp392
g59
(dp393
sg68
g378
sg61
(lp394
g54
(g55
g56
NtRp395
(dp396
g59
(dp397
g67
I3
ssg68
g391
sg61
(lp398
S''
asbasbasbag54
(g70
g56
NtRp399
(dp400
g59
(dp401
sg68
g269
sg61
(lp402
g54
(g75
g56
NtRp403
(dp404
g59
(dp405
g79
g80
ssg68
g399
sg61
(lp406
S'version'
p407
asbag54
(g75
g56
NtRp408
(dp409
g59
(dp410
g86
g87
ssg68
g399
sg61
(lp411
S':'
asbag54
(g75
g56
NtRp412
(dp413
g59
(dp414
sg68
g399
sg61
(lp415
g54
(g55
g56
NtRp416
(dp417
g59
(dp418
g67
I3
ssg68
g412
sg61
(lp419
S''
asbasbasbasbasbasbasbag54
(g70
g56
NtRp420
(dp421
g59
(dp422
sg68
g244
sg61
(lp423
g54
(g75
g56
NtRp424
(dp425
g59
(dp426
g79
g80
ssg68
g420
sg61
(lp427
S'session_id_welcome'
p428
asbag54
(g75
g56
NtRp429
(dp430
g59
(dp431
g86
g87
ssg68
g420
sg61
(lp432
S':'
asbag54
(g75
g56
NtRp433
(dp434
g59
(dp435
sg68
g420
sg61
(lp436
g54
(g55
g56
NtRp437
(dp438
g59
(dp439
g67
I4
ssg68
g433
sg61
(lp440
g54
(g63
g56
NtRp441
(dp442
g59
(dp443
g67
I3
ssg68
Nsg61
(lp444
g54
(g70
g56
NtRp445
(dp446
g59
(dp447
sg68
g441
sg61
(lp448
g54
(g75
g56
NtRp449
(dp450
g59
(dp451
g79
g80
ssg68
g445
sg61
(lp452
g281
asbag54
(g75
g56
NtRp453
(dp454
g59
(dp455
g86
g87
ssg68
g445
sg61
(lp456
S':'
asbag54
(g75
g56
NtRp457
(dp458
g59
(dp459
sg68
g445
sg61
(lp460
g54
(g55
g56
NtRp461
(dp462
g59
(dp463
g67
I3
ssg68
g457
sg61
(lp464
S''
asbasbasbag54
(g70
g56
NtRp465
(dp466
g59
(dp467
sg68
g441
sg61
(lp468
g54
(g75
g56
NtRp469
(dp470
g59
(dp471
g79
g80
ssg68
g465
sg61
(lp472
g302
asbag54
(g75
g56
NtRp473
(dp474
g59
(dp475
g86
g87
ssg68
g465
sg61
(lp476
S':'
asbag54
(g75
g56
NtRp477
(dp478
g59
(dp479
sg68
g465
sg61
(lp480
g54
(g55
g56
NtRp481
(dp482
g59
(dp483
g67
I3
ssg68
g477
sg61
(lp484
S''
asbasbasbag54
(g70
g56
NtRp485
(dp486
g59
(dp487
sg68
g441
sg61
(lp488
g54
(g75
g56
NtRp489
(dp490
g59
(dp491
g79
g80
ssg68
g485
sg61
(lp492
g323
asbag54
(g75
g56
NtRp493
(dp494
g59
(dp495
g86
g87
ssg68
g485
sg61
(lp496
S':'
asbag54
(g75
g56
NtRp497
(dp498
g59
(dp499
sg68
g485
sg61
(lp500
g54
(g55
g56
NtRp501
(dp502
g59
(dp503
g67
I3
ssg68
g497
sg61
(lp504
S''
asbasbasbag54
(g70
g56
NtRp505
(dp506
g59
(dp507
sg68
g441
sg61
(lp508
g54
(g75
g56
NtRp509
(dp510
g59
(dp511
g79
g80
ssg68
g505
sg61
(lp512
g344
asbag54
(g75
g56
NtRp513
(dp514
g59
(dp515
g86
g87
ssg68
g505
sg61
(lp516
S':'
asbag54
(g75
g56
NtRp517
(dp518
g59
(dp519
sg68
g505
sg61
(lp520
g54
(g55
g56
NtRp521
(dp522
g59
(dp523
g67
I3
ssg68
g517
sg61
(lp524
S''
asbasbasbag54
(g70
g56
NtRp525
(dp526
g59
(dp527
sg68
g441
sg61
(lp528
g54
(g75
g56
NtRp529
(dp530
g59
(dp531
g79
g80
ssg68
g525
sg61
(lp532
g365
asbag54
(g75
g56
NtRp533
(dp534
g59
(dp535
g86
g87
ssg68
g525
sg61
(lp536
S':'
asbag54
(g75
g56
NtRp537
(dp538
g59
(dp539
sg68
g525
sg61
(lp540
g54
(g55
g56
NtRp541
(dp542
g59
(dp543
g67
I3
ssg68
g537
sg61
(lp544
S''
asbasbasbag54
(g70
g56
NtRp545
(dp546
g59
(dp547
sg68
g441
sg61
(lp548
g54
(g75
g56
NtRp549
(dp550
g59
(dp551
g79
g80
ssg68
g545
sg61
(lp552
g386
asbag54
(g75
g56
NtRp553
(dp554
g59
(dp555
g86
g87
ssg68
g545
sg61
(lp556
S':'
asbag54
(g75
g56
NtRp557
(dp558
g59
(dp559
sg68
g545
sg61
(lp560
g54
(g55
g56
NtRp561
(dp562
g59
(dp563
g67
I3
ssg68
g557
sg61
(lp564
S''
asbasbasbag54
(g70
g56
NtRp565
(dp566
g59
(dp567
sg68
g441
sg61
(lp568
g54
(g75
g56
NtRp569
(dp570
g59
(dp571
g79
g80
ssg68
g565
sg61
(lp572
g407
asbag54
(g75
g56
NtRp573
(dp574
g59
(dp575
g86
g87
ssg68
g565
sg61
(lp576
S':'
asbag54
(g75
g56
NtRp577
(dp578
g59
(dp579
sg68
g565
sg61
(lp580
g54
(g55
g56
NtRp581
(dp582
g59
(dp583
g67
I3
ssg68
g577
sg61
(lp584
S''
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp585
(dp586
g59
(dp587
sg68
g64
sg61
(lp588
g54
(g75
g56
NtRp589
(dp590
g59
(dp591
g79
g80
ssg68
g585
sg61
(lp592
S'env'
p593
asbag54
(g75
g56
NtRp594
(dp595
g59
(dp596
g86
g87
ssg68
g585
sg61
(lp597
S':'
asbag54
(g75
g56
NtRp598
(dp599
g59
(dp600
sg68
g585
sg61
(lp601
g54
(g55
g56
NtRp602
(dp603
g59
(dp604
g67
I5
ssg68
g598
sg61
(lp605
g54
(g63
g56
NtRp606
(dp607
g59
(dp608
g67
I4
ssg68
Nsg61
(lp609
g54
(g70
g56
NtRp610
(dp611
g59
(dp612
sg68
g606
sg61
(lp613
g54
(g75
g56
NtRp614
(dp615
g59
(dp616
g79
g80
ssg68
g610
sg61
(lp617
S'app_folders'
p618
asbag54
(g75
g56
NtRp619
(dp620
g59
(dp621
g86
g87
ssg68
g610
sg61
(lp622
S':'
asbag54
(g75
g56
NtRp623
(dp624
g59
(dp625
sg68
g610
sg61
(lp626
g54
(g55
g56
NtRp627
(dp628
g59
(dp629
g67
I4
ssg68
g623
sg61
(lp630
S"set(['C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\Yuki\\\\web2py\\\\applications\\\\admin\\\\', 'C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\Yuki\\\\web2py\\\\applications\\\\welcome\\\\'])"
p631
asbasbasbag54
(g70
g56
NtRp632
(dp633
g59
(dp634
sg68
g606
sg61
(lp635
g54
(g75
g56
NtRp636
(dp637
g59
(dp638
g79
g80
ssg68
g632
sg61
(lp639
S'applications_parent'
p640
asbag54
(g75
g56
NtRp641
(dp642
g59
(dp643
g86
g87
ssg68
g632
sg61
(lp644
S':'
asbag54
(g75
g56
NtRp645
(dp646
g59
(dp647
sg68
g632
sg61
(lp648
g54
(g55
g56
NtRp649
(dp650
g59
(dp651
g67
I4
ssg68
g645
sg61
(lp652
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py'
p653
asbasbasbag54
(g70
g56
NtRp654
(dp655
g59
(dp656
sg68
g606
sg61
(lp657
g54
(g75
g56
NtRp658
(dp659
g59
(dp660
g79
g80
ssg68
g654
sg61
(lp661
S'cmd_args'
p662
asbag54
(g75
g56
NtRp663
(dp664
g59
(dp665
g86
g87
ssg68
g654
sg61
(lp666
S':'
asbag54
(g75
g56
NtRp667
(dp668
g59
(dp669
sg68
g654
sg61
(lp670
g54
(g55
g56
NtRp671
(dp672
g59
(dp673
g67
I4
ssg68
g667
sg61
(lp674
g54
(g63
g56
NtRp675
(dp676
g59
(dp677
g67
I3
ssg68
Nsg61
(lp678
sbasbasbasbag54
(g70
g56
NtRp679
(dp680
g59
(dp681
sg68
g606
sg61
(lp682
g54
(g75
g56
NtRp683
(dp684
g59
(dp685
g79
g80
ssg68
g679
sg61
(lp686
S'cmd_options'
p687
asbag54
(g75
g56
NtRp688
(dp689
g59
(dp690
g86
g87
ssg68
g679
sg61
(lp691
S':'
asbag54
(g75
g56
NtRp692
(dp693
g59
(dp694
sg68
g679
sg61
(lp695
g54
(g55
g56
NtRp696
(dp697
g59
(dp698
g67
I4
ssg68
g692
sg61
(lp699
S"<Values at 0x2d92fa8: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Batou', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\Yuki\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p700
asbasbasbag54
(g70
g56
NtRp701
(dp702
g59
(dp703
sg68
g606
sg61
(lp704
g54
(g75
g56
NtRp705
(dp706
g59
(dp707
g79
g80
ssg68
g701
sg61
(lp708
S'content_length'
p709
asbag54
(g75
g56
NtRp710
(dp711
g59
(dp712
g86
g87
ssg68
g701
sg61
(lp713
S':'
asbag54
(g75
g56
NtRp714
(dp715
g59
(dp716
sg68
g701
sg61
(lp717
g54
(g55
g56
NtRp718
(dp719
g59
(dp720
g67
I4
ssg68
g714
sg61
(lp721
S'0'
asbasbasbag54
(g70
g56
NtRp722
(dp723
g59
(dp724
sg68
g606
sg61
(lp725
g54
(g75
g56
NtRp726
(dp727
g59
(dp728
g79
g80
ssg68
g722
sg61
(lp729
S'db_sessions'
p730
asbag54
(g75
g56
NtRp731
(dp732
g59
(dp733
g86
g87
ssg68
g722
sg61
(lp734
S':'
asbag54
(g75
g56
NtRp735
(dp736
g59
(dp737
sg68
g722
sg61
(lp738
g54
(g55
g56
NtRp739
(dp740
g59
(dp741
g67
I4
ssg68
g735
sg61
(lp742
S'set([])'
p743
asbasbasbag54
(g70
g56
NtRp744
(dp745
g59
(dp746
sg68
g606
sg61
(lp747
g54
(g75
g56
NtRp748
(dp749
g59
(dp750
g79
g80
ssg68
g744
sg61
(lp751
S'debugging'
p752
asbag54
(g75
g56
NtRp753
(dp754
g59
(dp755
g86
g87
ssg68
g744
sg61
(lp756
S':'
asbag54
(g75
g56
NtRp757
(dp758
g59
(dp759
sg68
g744
sg61
(lp760
g54
(g55
g56
NtRp761
(dp762
g59
(dp763
g67
I4
ssg68
g757
sg61
(lp764
S'False'
p765
asbasbasbag54
(g70
g56
NtRp766
(dp767
g59
(dp768
sg68
g606
sg61
(lp769
g54
(g75
g56
NtRp770
(dp771
g59
(dp772
g79
g80
ssg68
g766
sg61
(lp773
S'gluon_parent'
p774
asbag54
(g75
g56
NtRp775
(dp776
g59
(dp777
g86
g87
ssg68
g766
sg61
(lp778
S':'
asbag54
(g75
g56
NtRp779
(dp780
g59
(dp781
sg68
g766
sg61
(lp782
g54
(g55
g56
NtRp783
(dp784
g59
(dp785
g67
I4
ssg68
g779
sg61
(lp786
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py'
p787
asbasbasbag54
(g70
g56
NtRp788
(dp789
g59
(dp790
sg68
g606
sg61
(lp791
g54
(g75
g56
NtRp792
(dp793
g59
(dp794
g79
g80
ssg68
g788
sg61
(lp795
S'http_accept'
p796
asbag54
(g75
g56
NtRp797
(dp798
g59
(dp799
g86
g87
ssg68
g788
sg61
(lp800
S':'
asbag54
(g75
g56
NtRp801
(dp802
g59
(dp803
sg68
g788
sg61
(lp804
g54
(g55
g56
NtRp805
(dp806
g59
(dp807
g67
I4
ssg68
g801
sg61
(lp808
S'*/*'
p809
asbasbasbag54
(g70
g56
NtRp810
(dp811
g59
(dp812
sg68
g606
sg61
(lp813
g54
(g75
g56
NtRp814
(dp815
g59
(dp816
g79
g80
ssg68
g810
sg61
(lp817
S'http_accept_charset'
p818
asbag54
(g75
g56
NtRp819
(dp820
g59
(dp821
g86
g87
ssg68
g810
sg61
(lp822
S':'
asbag54
(g75
g56
NtRp823
(dp824
g59
(dp825
sg68
g810
sg61
(lp826
g54
(g55
g56
NtRp827
(dp828
g59
(dp829
g67
I4
ssg68
g823
sg61
(lp830
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p831
asbasbasbag54
(g70
g56
NtRp832
(dp833
g59
(dp834
sg68
g606
sg61
(lp835
g54
(g75
g56
NtRp836
(dp837
g59
(dp838
g79
g80
ssg68
g832
sg61
(lp839
S'http_accept_encoding'
p840
asbag54
(g75
g56
NtRp841
(dp842
g59
(dp843
g86
g87
ssg68
g832
sg61
(lp844
S':'
asbag54
(g75
g56
NtRp845
(dp846
g59
(dp847
sg68
g832
sg61
(lp848
g54
(g55
g56
NtRp849
(dp850
g59
(dp851
g67
I4
ssg68
g845
sg61
(lp852
S'gzip,deflate,sdch'
p853
asbasbasbag54
(g70
g56
NtRp854
(dp855
g59
(dp856
sg68
g606
sg61
(lp857
g54
(g75
g56
NtRp858
(dp859
g59
(dp860
g79
g80
ssg68
g854
sg61
(lp861
S'http_accept_language'
p862
asbag54
(g75
g56
NtRp863
(dp864
g59
(dp865
g86
g87
ssg68
g854
sg61
(lp866
S':'
asbag54
(g75
g56
NtRp867
(dp868
g59
(dp869
sg68
g854
sg61
(lp870
g54
(g55
g56
NtRp871
(dp872
g59
(dp873
g67
I4
ssg68
g867
sg61
(lp874
S'en-US,en;q=0.8'
p875
asbasbasbag54
(g70
g56
NtRp876
(dp877
g59
(dp878
sg68
g606
sg61
(lp879
g54
(g75
g56
NtRp880
(dp881
g59
(dp882
g79
g80
ssg68
g876
sg61
(lp883
S'http_connection'
p884
asbag54
(g75
g56
NtRp885
(dp886
g59
(dp887
g86
g87
ssg68
g876
sg61
(lp888
S':'
asbag54
(g75
g56
NtRp889
(dp890
g59
(dp891
sg68
g876
sg61
(lp892
g54
(g55
g56
NtRp893
(dp894
g59
(dp895
g67
I4
ssg68
g889
sg61
(lp896
S'keep-alive'
p897
asbasbasbag54
(g70
g56
NtRp898
(dp899
g59
(dp900
sg68
g606
sg61
(lp901
g54
(g75
g56
NtRp902
(dp903
g59
(dp904
g79
g80
ssg68
g898
sg61
(lp905
S'http_content_length'
p906
asbag54
(g75
g56
NtRp907
(dp908
g59
(dp909
g86
g87
ssg68
g898
sg61
(lp910
S':'
asbag54
(g75
g56
NtRp911
(dp912
g59
(dp913
sg68
g898
sg61
(lp914
g54
(g55
g56
NtRp915
(dp916
g59
(dp917
g67
I4
ssg68
g911
sg61
(lp918
S'0'
asbasbasbag54
(g70
g56
NtRp919
(dp920
g59
(dp921
sg68
g606
sg61
(lp922
g54
(g75
g56
NtRp923
(dp924
g59
(dp925
g79
g80
ssg68
g919
sg61
(lp926
S'http_cookie'
p927
asbag54
(g75
g56
NtRp928
(dp929
g59
(dp930
g86
g87
ssg68
g919
sg61
(lp931
S':'
asbag54
(g75
g56
NtRp932
(dp933
g59
(dp934
sg68
g919
sg61
(lp935
g54
(g55
g56
NtRp936
(dp937
g59
(dp938
g67
I4
ssg68
g932
sg61
(lp939
S'session_id_welcome=127.0.0.1-f1276ff8-2ae2-4566-9289-2ddee731539a; session_id_admin=127.0.0.1-bf0b0813-7a73-44ef-8add-4ccb370d842d'
p940
asbasbasbag54
(g70
g56
NtRp941
(dp942
g59
(dp943
sg68
g606
sg61
(lp944
g54
(g75
g56
NtRp945
(dp946
g59
(dp947
g79
g80
ssg68
g941
sg61
(lp948
S'http_host'
p949
asbag54
(g75
g56
NtRp950
(dp951
g59
(dp952
g86
g87
ssg68
g941
sg61
(lp953
S':'
asbag54
(g75
g56
NtRp954
(dp955
g59
(dp956
sg68
g941
sg61
(lp957
g54
(g55
g56
NtRp958
(dp959
g59
(dp960
g67
I4
ssg68
g954
sg61
(lp961
S'127.0.0.1:8000'
p962
asbasbasbag54
(g70
g56
NtRp963
(dp964
g59
(dp965
sg68
g606
sg61
(lp966
g54
(g75
g56
NtRp967
(dp968
g59
(dp969
g79
g80
ssg68
g963
sg61
(lp970
S'http_origin'
p971
asbag54
(g75
g56
NtRp972
(dp973
g59
(dp974
g86
g87
ssg68
g963
sg61
(lp975
S':'
asbag54
(g75
g56
NtRp976
(dp977
g59
(dp978
sg68
g963
sg61
(lp979
g54
(g55
g56
NtRp980
(dp981
g59
(dp982
g67
I4
ssg68
g976
sg61
(lp983
S'http://127.0.0.1:8000'
p984
asbasbasbag54
(g70
g56
NtRp985
(dp986
g59
(dp987
sg68
g606
sg61
(lp988
g54
(g75
g56
NtRp989
(dp990
g59
(dp991
g79
g80
ssg68
g985
sg61
(lp992
S'http_referer'
p993
asbag54
(g75
g56
NtRp994
(dp995
g59
(dp996
g86
g87
ssg68
g985
sg61
(lp997
S':'
asbag54
(g75
g56
NtRp998
(dp999
g59
(dp1000
sg68
g985
sg61
(lp1001
g54
(g55
g56
NtRp1002
(dp1003
g59
(dp1004
g67
I4
ssg68
g998
sg61
(lp1005
S'http://127.0.0.1:8000/admin/default/site'
p1006
asbasbasbag54
(g70
g56
NtRp1007
(dp1008
g59
(dp1009
sg68
g606
sg61
(lp1010
g54
(g75
g56
NtRp1011
(dp1012
g59
(dp1013
g79
g80
ssg68
g1007
sg61
(lp1014
S'http_user_agent'
p1015
asbag54
(g75
g56
NtRp1016
(dp1017
g59
(dp1018
g86
g87
ssg68
g1007
sg61
(lp1019
S':'
asbag54
(g75
g56
NtRp1020
(dp1021
g59
(dp1022
sg68
g1007
sg61
(lp1023
g54
(g55
g56
NtRp1024
(dp1025
g59
(dp1026
g67
I4
ssg68
g1020
sg61
(lp1027
S'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.18 (KHTML, like Gecko) Chrome/18.0.1011.0 Safari/535.18'
p1028
asbasbasbag54
(g70
g56
NtRp1029
(dp1030
g59
(dp1031
sg68
g606
sg61
(lp1032
g54
(g75
g56
NtRp1033
(dp1034
g59
(dp1035
g79
g80
ssg68
g1029
sg61
(lp1036
S'http_x_requested_with'
p1037
asbag54
(g75
g56
NtRp1038
(dp1039
g59
(dp1040
g86
g87
ssg68
g1029
sg61
(lp1041
S':'
asbag54
(g75
g56
NtRp1042
(dp1043
g59
(dp1044
sg68
g1029
sg61
(lp1045
g54
(g55
g56
NtRp1046
(dp1047
g59
(dp1048
g67
I4
ssg68
g1042
sg61
(lp1049
S'XMLHttpRequest'
p1050
asbasbasbag54
(g70
g56
NtRp1051
(dp1052
g59
(dp1053
sg68
g606
sg61
(lp1054
g54
(g75
g56
NtRp1055
(dp1056
g59
(dp1057
g79
g80
ssg68
g1051
sg61
(lp1058
S'is_jython'
p1059
asbag54
(g75
g56
NtRp1060
(dp1061
g59
(dp1062
g86
g87
ssg68
g1051
sg61
(lp1063
S':'
asbag54
(g75
g56
NtRp1064
(dp1065
g59
(dp1066
sg68
g1051
sg61
(lp1067
g54
(g55
g56
NtRp1068
(dp1069
g59
(dp1070
g67
I4
ssg68
g1064
sg61
(lp1071
g765
asbasbasbag54
(g70
g56
NtRp1072
(dp1073
g59
(dp1074
sg68
g606
sg61
(lp1075
g54
(g75
g56
NtRp1076
(dp1077
g59
(dp1078
g79
g80
ssg68
g1072
sg61
(lp1079
S'is_pypy'
p1080
asbag54
(g75
g56
NtRp1081
(dp1082
g59
(dp1083
g86
g87
ssg68
g1072
sg61
(lp1084
S':'
asbag54
(g75
g56
NtRp1085
(dp1086
g59
(dp1087
sg68
g1072
sg61
(lp1088
g54
(g55
g56
NtRp1089
(dp1090
g59
(dp1091
g67
I4
ssg68
g1085
sg61
(lp1092
g765
asbasbasbag54
(g70
g56
NtRp1093
(dp1094
g59
(dp1095
sg68
g606
sg61
(lp1096
g54
(g75
g56
NtRp1097
(dp1098
g59
(dp1099
g79
g80
ssg68
g1093
sg61
(lp1100
S'path_info'
p1101
asbag54
(g75
g56
NtRp1102
(dp1103
g59
(dp1104
g86
g87
ssg68
g1093
sg61
(lp1105
S':'
asbag54
(g75
g56
NtRp1106
(dp1107
g59
(dp1108
sg68
g1093
sg61
(lp1109
g54
(g55
g56
NtRp1110
(dp1111
g59
(dp1112
g67
I4
ssg68
g1106
sg61
(lp1113
S'/admin/default/enable/README'
p1114
asbasbasbag54
(g70
g56
NtRp1115
(dp1116
g59
(dp1117
sg68
g606
sg61
(lp1118
g54
(g75
g56
NtRp1119
(dp1120
g59
(dp1121
g79
g80
ssg68
g1115
sg61
(lp1122
S'query_string'
p1123
asbag54
(g75
g56
NtRp1124
(dp1125
g59
(dp1126
g86
g87
ssg68
g1115
sg61
(lp1127
S':'
asbag54
(g75
g56
NtRp1128
(dp1129
g59
(dp1130
sg68
g1115
sg61
(lp1131
g54
(g55
g56
NtRp1132
(dp1133
g59
(dp1134
g67
I4
ssg68
g1128
sg61
(lp1135
S''
asbasbasbag54
(g70
g56
NtRp1136
(dp1137
g59
(dp1138
sg68
g606
sg61
(lp1139
g54
(g75
g56
NtRp1140
(dp1141
g59
(dp1142
g79
g80
ssg68
g1136
sg61
(lp1143
S'remote_addr'
p1144
asbag54
(g75
g56
NtRp1145
(dp1146
g59
(dp1147
g86
g87
ssg68
g1136
sg61
(lp1148
S':'
asbag54
(g75
g56
NtRp1149
(dp1150
g59
(dp1151
sg68
g1136
sg61
(lp1152
g54
(g55
g56
NtRp1153
(dp1154
g59
(dp1155
g67
I4
ssg68
g1149
sg61
(lp1156
g200
asbasbasbag54
(g70
g56
NtRp1157
(dp1158
g59
(dp1159
sg68
g606
sg61
(lp1160
g54
(g75
g56
NtRp1161
(dp1162
g59
(dp1163
g79
g80
ssg68
g1157
sg61
(lp1164
S'remote_port'
p1165
asbag54
(g75
g56
NtRp1166
(dp1167
g59
(dp1168
g86
g87
ssg68
g1157
sg61
(lp1169
S':'
asbag54
(g75
g56
NtRp1170
(dp1171
g59
(dp1172
sg68
g1157
sg61
(lp1173
g54
(g55
g56
NtRp1174
(dp1175
g59
(dp1176
g67
I4
ssg68
g1170
sg61
(lp1177
S'53568'
p1178
asbasbasbag54
(g70
g56
NtRp1179
(dp1180
g59
(dp1181
sg68
g606
sg61
(lp1182
g54
(g75
g56
NtRp1183
(dp1184
g59
(dp1185
g79
g80
ssg68
g1179
sg61
(lp1186
S'request_method'
p1187
asbag54
(g75
g56
NtRp1188
(dp1189
g59
(dp1190
g86
g87
ssg68
g1179
sg61
(lp1191
S':'
asbag54
(g75
g56
NtRp1192
(dp1193
g59
(dp1194
sg68
g1179
sg61
(lp1195
g54
(g55
g56
NtRp1196
(dp1197
g59
(dp1198
g67
I4
ssg68
g1192
sg61
(lp1199
S'POST'
p1200
asbasbasbag54
(g70
g56
NtRp1201
(dp1202
g59
(dp1203
sg68
g606
sg61
(lp1204
g54
(g75
g56
NtRp1205
(dp1206
g59
(dp1207
g79
g80
ssg68
g1201
sg61
(lp1208
S'script_name'
p1209
asbag54
(g75
g56
NtRp1210
(dp1211
g59
(dp1212
g86
g87
ssg68
g1201
sg61
(lp1213
S':'
asbag54
(g75
g56
NtRp1214
(dp1215
g59
(dp1216
sg68
g1201
sg61
(lp1217
g54
(g55
g56
NtRp1218
(dp1219
g59
(dp1220
g67
I4
ssg68
g1214
sg61
(lp1221
S''
asbasbasbag54
(g70
g56
NtRp1222
(dp1223
g59
(dp1224
sg68
g606
sg61
(lp1225
g54
(g75
g56
NtRp1226
(dp1227
g59
(dp1228
g79
g80
ssg68
g1222
sg61
(lp1229
S'server_name'
p1230
asbag54
(g75
g56
NtRp1231
(dp1232
g59
(dp1233
g86
g87
ssg68
g1222
sg61
(lp1234
S':'
asbag54
(g75
g56
NtRp1235
(dp1236
g59
(dp1237
sg68
g1222
sg61
(lp1238
g54
(g55
g56
NtRp1239
(dp1240
g59
(dp1241
g67
I4
ssg68
g1235
sg61
(lp1242
S'Batou'
p1243
asbasbasbag54
(g70
g56
NtRp1244
(dp1245
g59
(dp1246
sg68
g606
sg61
(lp1247
g54
(g75
g56
NtRp1248
(dp1249
g59
(dp1250
g79
g80
ssg68
g1244
sg61
(lp1251
S'server_port'
p1252
asbag54
(g75
g56
NtRp1253
(dp1254
g59
(dp1255
g86
g87
ssg68
g1244
sg61
(lp1256
S':'
asbag54
(g75
g56
NtRp1257
(dp1258
g59
(dp1259
sg68
g1244
sg61
(lp1260
g54
(g55
g56
NtRp1261
(dp1262
g59
(dp1263
g67
I4
ssg68
g1257
sg61
(lp1264
S'8000'
p1265
asbasbasbag54
(g70
g56
NtRp1266
(dp1267
g59
(dp1268
sg68
g606
sg61
(lp1269
g54
(g75
g56
NtRp1270
(dp1271
g59
(dp1272
g79
g80
ssg68
g1266
sg61
(lp1273
S'server_protocol'
p1274
asbag54
(g75
g56
NtRp1275
(dp1276
g59
(dp1277
g86
g87
ssg68
g1266
sg61
(lp1278
S':'
asbag54
(g75
g56
NtRp1279
(dp1280
g59
(dp1281
sg68
g1266
sg61
(lp1282
g54
(g55
g56
NtRp1283
(dp1284
g59
(dp1285
g67
I4
ssg68
g1279
sg61
(lp1286
S'HTTP/1.1'
p1287
asbasbasbag54
(g70
g56
NtRp1288
(dp1289
g59
(dp1290
sg68
g606
sg61
(lp1291
g54
(g75
g56
NtRp1292
(dp1293
g59
(dp1294
g79
g80
ssg68
g1288
sg61
(lp1295
S'server_software'
p1296
asbag54
(g75
g56
NtRp1297
(dp1298
g59
(dp1299
g86
g87
ssg68
g1288
sg61
(lp1300
S':'
asbag54
(g75
g56
NtRp1301
(dp1302
g59
(dp1303
sg68
g1288
sg61
(lp1304
g54
(g55
g56
NtRp1305
(dp1306
g59
(dp1307
g67
I4
ssg68
g1301
sg61
(lp1308
S'Rocket 1.2.4'
p1309
asbasbasbag54
(g70
g56
NtRp1310
(dp1311
g59
(dp1312
sg68
g606
sg61
(lp1313
g54
(g75
g56
NtRp1314
(dp1315
g59
(dp1316
g79
g80
ssg68
g1310
sg61
(lp1317
S'web2py_crontype'
p1318
asbag54
(g75
g56
NtRp1319
(dp1320
g59
(dp1321
g86
g87
ssg68
g1310
sg61
(lp1322
S':'
asbag54
(g75
g56
NtRp1323
(dp1324
g59
(dp1325
sg68
g1310
sg61
(lp1326
g54
(g55
g56
NtRp1327
(dp1328
g59
(dp1329
g67
I4
ssg68
g1323
sg61
(lp1330
S'hard'
p1331
asbasbasbag54
(g70
g56
NtRp1332
(dp1333
g59
(dp1334
sg68
g606
sg61
(lp1335
g54
(g75
g56
NtRp1336
(dp1337
g59
(dp1338
g79
g80
ssg68
g1332
sg61
(lp1339
S'web2py_path'
p1340
asbag54
(g75
g56
NtRp1341
(dp1342
g59
(dp1343
g86
g87
ssg68
g1332
sg61
(lp1344
S':'
asbag54
(g75
g56
NtRp1345
(dp1346
g59
(dp1347
sg68
g1332
sg61
(lp1348
g54
(g55
g56
NtRp1349
(dp1350
g59
(dp1351
g67
I4
ssg68
g1345
sg61
(lp1352
g653
asbasbasbag54
(g70
g56
NtRp1353
(dp1354
g59
(dp1355
sg68
g606
sg61
(lp1356
g54
(g75
g56
NtRp1357
(dp1358
g59
(dp1359
g79
g80
ssg68
g1353
sg61
(lp1360
S'web2py_version'
p1361
asbag54
(g75
g56
NtRp1362
(dp1363
g59
(dp1364
g86
g87
ssg68
g1353
sg61
(lp1365
S':'
asbag54
(g75
g56
NtRp1366
(dp1367
g59
(dp1368
sg68
g1353
sg61
(lp1369
g54
(g55
g56
NtRp1370
(dp1371
g59
(dp1372
g67
I4
ssg68
g1366
sg61
(lp1373
g54
(g63
g56
NtRp1374
(dp1375
g59
(dp1376
g67
I3
ssg68
Nsg61
(lp1377
g54
(g70
g56
NtRp1378
(dp1379
g59
(dp1380
sg68
g1374
sg61
(lp1381
g54
(g75
g56
NtRp1382
(dp1383
g59
(dp1384
sg68
g1378
sg61
(lp1385
g54
(g55
g56
NtRp1386
(dp1387
g59
(dp1388
g67
I3
ssg68
g1382
sg61
(lp1389
S'1'
asbasbasbag54
(g70
g56
NtRp1390
(dp1391
g59
(dp1392
sg68
g1374
sg61
(lp1393
g54
(g75
g56
NtRp1394
(dp1395
g59
(dp1396
sg68
g1390
sg61
(lp1397
g54
(g55
g56
NtRp1398
(dp1399
g59
(dp1400
g67
I3
ssg68
g1394
sg61
(lp1401
S'99'
p1402
asbasbasbag54
(g70
g56
NtRp1403
(dp1404
g59
(dp1405
sg68
g1374
sg61
(lp1406
g54
(g75
g56
NtRp1407
(dp1408
g59
(dp1409
sg68
g1403
sg61
(lp1410
g54
(g55
g56
NtRp1411
(dp1412
g59
(dp1413
g67
I3
ssg68
g1407
sg61
(lp1414
S'7'
asbasbasbag54
(g70
g56
NtRp1415
(dp1416
g59
(dp1417
sg68
g1374
sg61
(lp1418
g54
(g75
g56
NtRp1419
(dp1420
g59
(dp1421
sg68
g1415
sg61
(lp1422
g54
(g55
g56
NtRp1423
(dp1424
g59
(dp1425
g67
I3
ssg68
g1419
sg61
(lp1426
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1427
asbasbasbag54
(g70
g56
NtRp1428
(dp1429
g59
(dp1430
sg68
g1374
sg61
(lp1431
g54
(g75
g56
NtRp1432
(dp1433
g59
(dp1434
sg68
g1428
sg61
(lp1435
g54
(g55
g56
NtRp1436
(dp1437
g59
(dp1438
g67
I3
ssg68
g1432
sg61
(lp1439
S'stable'
p1440
asbasbasbasbasbasbasbag54
(g70
g56
NtRp1441
(dp1442
g59
(dp1443
sg68
g606
sg61
(lp1444
g54
(g75
g56
NtRp1445
(dp1446
g59
(dp1447
g79
g80
ssg68
g1441
sg61
(lp1448
S'wsgi_errors'
p1449
asbag54
(g75
g56
NtRp1450
(dp1451
g59
(dp1452
g86
g87
ssg68
g1441
sg61
(lp1453
S':'
asbag54
(g75
g56
NtRp1454
(dp1455
g59
(dp1456
sg68
g1441
sg61
(lp1457
g54
(g55
g56
NtRp1458
(dp1459
g59
(dp1460
g67
I4
ssg68
g1454
sg61
(lp1461
S"<open file '<stderr>', mode 'w' at 0x01F400B0>"
p1462
asbasbasbag54
(g70
g56
NtRp1463
(dp1464
g59
(dp1465
sg68
g606
sg61
(lp1466
g54
(g75
g56
NtRp1467
(dp1468
g59
(dp1469
g79
g80
ssg68
g1463
sg61
(lp1470
S'wsgi_file_wrapper'
p1471
asbag54
(g75
g56
NtRp1472
(dp1473
g59
(dp1474
g86
g87
ssg68
g1463
sg61
(lp1475
S':'
asbag54
(g75
g56
NtRp1476
(dp1477
g59
(dp1478
sg68
g1463
sg61
(lp1479
g54
(g55
g56
NtRp1480
(dp1481
g59
(dp1482
g67
I4
ssg68
g1476
sg61
(lp1483
S'<class wsgiref.util.FileWrapper at 0x02B2E570>'
p1484
asbasbasbag54
(g70
g56
NtRp1485
(dp1486
g59
(dp1487
sg68
g606
sg61
(lp1488
g54
(g75
g56
NtRp1489
(dp1490
g59
(dp1491
g79
g80
ssg68
g1485
sg61
(lp1492
S'wsgi_input'
p1493
asbag54
(g75
g56
NtRp1494
(dp1495
g59
(dp1496
g86
g87
ssg68
g1485
sg61
(lp1497
S':'
asbag54
(g75
g56
NtRp1498
(dp1499
g59
(dp1500
sg68
g1485
sg61
(lp1501
g54
(g55
g56
NtRp1502
(dp1503
g59
(dp1504
g67
I4
ssg68
g1498
sg61
(lp1505
S'<socket._fileobject object at 0x0612ACB0>'
p1506
asbasbasbag54
(g70
g56
NtRp1507
(dp1508
g59
(dp1509
sg68
g606
sg61
(lp1510
g54
(g75
g56
NtRp1511
(dp1512
g59
(dp1513
g79
g80
ssg68
g1507
sg61
(lp1514
S'wsgi_multiprocess'
p1515
asbag54
(g75
g56
NtRp1516
(dp1517
g59
(dp1518
g86
g87
ssg68
g1507
sg61
(lp1519
S':'
asbag54
(g75
g56
NtRp1520
(dp1521
g59
(dp1522
sg68
g1507
sg61
(lp1523
g54
(g55
g56
NtRp1524
(dp1525
g59
(dp1526
g67
I4
ssg68
g1520
sg61
(lp1527
g765
asbasbasbag54
(g70
g56
NtRp1528
(dp1529
g59
(dp1530
sg68
g606
sg61
(lp1531
g54
(g75
g56
NtRp1532
(dp1533
g59
(dp1534
g79
g80
ssg68
g1528
sg61
(lp1535
S'wsgi_multithread'
p1536
asbag54
(g75
g56
NtRp1537
(dp1538
g59
(dp1539
g86
g87
ssg68
g1528
sg61
(lp1540
S':'
asbag54
(g75
g56
NtRp1541
(dp1542
g59
(dp1543
sg68
g1528
sg61
(lp1544
g54
(g55
g56
NtRp1545
(dp1546
g59
(dp1547
g67
I4
ssg68
g1541
sg61
(lp1548
g97
asbasbasbag54
(g70
g56
NtRp1549
(dp1550
g59
(dp1551
sg68
g606
sg61
(lp1552
g54
(g75
g56
NtRp1553
(dp1554
g59
(dp1555
g79
g80
ssg68
g1549
sg61
(lp1556
S'wsgi_run_once'
p1557
asbag54
(g75
g56
NtRp1558
(dp1559
g59
(dp1560
g86
g87
ssg68
g1549
sg61
(lp1561
S':'
asbag54
(g75
g56
NtRp1562
(dp1563
g59
(dp1564
sg68
g1549
sg61
(lp1565
g54
(g55
g56
NtRp1566
(dp1567
g59
(dp1568
g67
I4
ssg68
g1562
sg61
(lp1569
g765
asbasbasbag54
(g70
g56
NtRp1570
(dp1571
g59
(dp1572
sg68
g606
sg61
(lp1573
g54
(g75
g56
NtRp1574
(dp1575
g59
(dp1576
g79
g80
ssg68
g1570
sg61
(lp1577
S'wsgi_url_scheme'
p1578
asbag54
(g75
g56
NtRp1579
(dp1580
g59
(dp1581
g86
g87
ssg68
g1570
sg61
(lp1582
S':'
asbag54
(g75
g56
NtRp1583
(dp1584
g59
(dp1585
sg68
g1570
sg61
(lp1586
g54
(g55
g56
NtRp1587
(dp1588
g59
(dp1589
g67
I4
ssg68
g1583
sg61
(lp1590
S'http'
p1591
asbasbasbag54
(g70
g56
NtRp1592
(dp1593
g59
(dp1594
sg68
g606
sg61
(lp1595
g54
(g75
g56
NtRp1596
(dp1597
g59
(dp1598
g79
g80
ssg68
g1592
sg61
(lp1599
S'wsgi_version'
p1600
asbag54
(g75
g56
NtRp1601
(dp1602
g59
(dp1603
g86
g87
ssg68
g1592
sg61
(lp1604
S':'
asbag54
(g75
g56
NtRp1605
(dp1606
g59
(dp1607
sg68
g1592
sg61
(lp1608
g54
(g55
g56
NtRp1609
(dp1610
g59
(dp1611
g67
I4
ssg68
g1605
sg61
(lp1612
g54
(g63
g56
NtRp1613
(dp1614
g59
(dp1615
g67
I3
ssg68
Nsg61
(lp1616
g54
(g70
g56
NtRp1617
(dp1618
g59
(dp1619
sg68
g1613
sg61
(lp1620
g54
(g75
g56
NtRp1621
(dp1622
g59
(dp1623
sg68
g1617
sg61
(lp1624
g54
(g55
g56
NtRp1625
(dp1626
g59
(dp1627
g67
I3
ssg68
g1621
sg61
(lp1628
S'1'
asbasbasbag54
(g70
g56
NtRp1629
(dp1630
g59
(dp1631
sg68
g1613
sg61
(lp1632
g54
(g75
g56
NtRp1633
(dp1634
g59
(dp1635
sg68
g1629
sg61
(lp1636
g54
(g55
g56
NtRp1637
(dp1638
g59
(dp1639
g67
I3
ssg68
g1633
sg61
(lp1640
S'0'
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp1641
(dp1642
g59
(dp1643
sg68
g64
sg61
(lp1644
g54
(g75
g56
NtRp1645
(dp1646
g59
(dp1647
g79
g80
ssg68
g1641
sg61
(lp1648
S'extension'
p1649
asbag54
(g75
g56
NtRp1650
(dp1651
g59
(dp1652
g86
g87
ssg68
g1641
sg61
(lp1653
S':'
asbag54
(g75
g56
NtRp1654
(dp1655
g59
(dp1656
sg68
g1641
sg61
(lp1657
g54
(g55
g56
NtRp1658
(dp1659
g59
(dp1660
g67
I5
ssg68
g1654
sg61
(lp1661
S'html'
p1662
asbasbasbag54
(g70
g56
NtRp1663
(dp1664
g59
(dp1665
sg68
g64
sg61
(lp1666
g54
(g75
g56
NtRp1667
(dp1668
g59
(dp1669
g79
g80
ssg68
g1663
sg61
(lp1670
S'folder'
p1671
asbag54
(g75
g56
NtRp1672
(dp1673
g59
(dp1674
g86
g87
ssg68
g1663
sg61
(lp1675
S':'
asbag54
(g75
g56
NtRp1676
(dp1677
g59
(dp1678
sg68
g1663
sg61
(lp1679
g54
(g55
g56
NtRp1680
(dp1681
g59
(dp1682
g67
I5
ssg68
g1676
sg61
(lp1683
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\applications\\admin\\'
p1684
asbasbasbag54
(g70
g56
NtRp1685
(dp1686
g59
(dp1687
sg68
g64
sg61
(lp1688
g54
(g75
g56
NtRp1689
(dp1690
g59
(dp1691
g79
g80
ssg68
g1685
sg61
(lp1692
S'function'
p1693
asbag54
(g75
g56
NtRp1694
(dp1695
g59
(dp1696
g86
g87
ssg68
g1685
sg61
(lp1697
S':'
asbag54
(g75
g56
NtRp1698
(dp1699
g59
(dp1700
sg68
g1685
sg61
(lp1701
g54
(g55
g56
NtRp1702
(dp1703
g59
(dp1704
g67
I5
ssg68
g1698
sg61
(lp1705
S'enable'
p1706
asbasbasbag54
(g70
g56
NtRp1707
(dp1708
g59
(dp1709
sg68
g64
sg61
(lp1710
g54
(g75
g56
NtRp1711
(dp1712
g59
(dp1713
g79
g80
ssg68
g1707
sg61
(lp1714
S'get_vars'
p1715
asbag54
(g75
g56
NtRp1716
(dp1717
g59
(dp1718
g86
g87
ssg68
g1707
sg61
(lp1719
S':'
asbag54
(g75
g56
NtRp1720
(dp1721
g59
(dp1722
sg68
g1707
sg61
(lp1723
g54
(g55
g56
NtRp1724
(dp1725
g59
(dp1726
g67
I5
ssg68
g1720
sg61
(lp1727
g54
(g63
g56
NtRp1728
(dp1729
g59
(dp1730
g67
I4
ssg68
Nsg61
(lp1731
sbasbasbasbag54
(g70
g56
NtRp1732
(dp1733
g59
(dp1734
sg68
g64
sg61
(lp1735
g54
(g75
g56
NtRp1736
(dp1737
g59
(dp1738
g79
g80
ssg68
g1732
sg61
(lp1739
S'global_settings'
p1740
asbag54
(g75
g56
NtRp1741
(dp1742
g59
(dp1743
g86
g87
ssg68
g1732
sg61
(lp1744
S':'
asbag54
(g75
g56
NtRp1745
(dp1746
g59
(dp1747
sg68
g1732
sg61
(lp1748
g54
(g55
g56
NtRp1749
(dp1750
g59
(dp1751
g67
I5
ssg68
g1745
sg61
(lp1752
g54
(g63
g56
NtRp1753
(dp1754
g59
(dp1755
g67
I4
ssg68
Nsg61
(lp1756
g54
(g70
g56
NtRp1757
(dp1758
g59
(dp1759
sg68
g1753
sg61
(lp1760
g54
(g75
g56
NtRp1761
(dp1762
g59
(dp1763
g79
g80
ssg68
g1757
sg61
(lp1764
g618
asbag54
(g75
g56
NtRp1765
(dp1766
g59
(dp1767
g86
g87
ssg68
g1757
sg61
(lp1768
S':'
asbag54
(g75
g56
NtRp1769
(dp1770
g59
(dp1771
sg68
g1757
sg61
(lp1772
g54
(g55
g56
NtRp1773
(dp1774
g59
(dp1775
g67
I4
ssg68
g1769
sg61
(lp1776
S"set(['C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\Yuki\\\\web2py\\\\applications\\\\admin\\\\', 'C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\Yuki\\\\web2py\\\\applications\\\\welcome\\\\'])"
p1777
asbasbasbag54
(g70
g56
NtRp1778
(dp1779
g59
(dp1780
sg68
g1753
sg61
(lp1781
g54
(g75
g56
NtRp1782
(dp1783
g59
(dp1784
g79
g80
ssg68
g1778
sg61
(lp1785
g640
asbag54
(g75
g56
NtRp1786
(dp1787
g59
(dp1788
g86
g87
ssg68
g1778
sg61
(lp1789
S':'
asbag54
(g75
g56
NtRp1790
(dp1791
g59
(dp1792
sg68
g1778
sg61
(lp1793
g54
(g55
g56
NtRp1794
(dp1795
g59
(dp1796
g67
I4
ssg68
g1790
sg61
(lp1797
g653
asbasbasbag54
(g70
g56
NtRp1798
(dp1799
g59
(dp1800
sg68
g1753
sg61
(lp1801
g54
(g75
g56
NtRp1802
(dp1803
g59
(dp1804
g79
g80
ssg68
g1798
sg61
(lp1805
g662
asbag54
(g75
g56
NtRp1806
(dp1807
g59
(dp1808
g86
g87
ssg68
g1798
sg61
(lp1809
S':'
asbag54
(g75
g56
NtRp1810
(dp1811
g59
(dp1812
sg68
g1798
sg61
(lp1813
g54
(g55
g56
NtRp1814
(dp1815
g59
(dp1816
g67
I4
ssg68
g1810
sg61
(lp1817
g54
(g63
g56
NtRp1818
(dp1819
g59
(dp1820
g67
I3
ssg68
Nsg61
(lp1821
sbasbasbasbag54
(g70
g56
NtRp1822
(dp1823
g59
(dp1824
sg68
g1753
sg61
(lp1825
g54
(g75
g56
NtRp1826
(dp1827
g59
(dp1828
g79
g80
ssg68
g1822
sg61
(lp1829
g687
asbag54
(g75
g56
NtRp1830
(dp1831
g59
(dp1832
g86
g87
ssg68
g1822
sg61
(lp1833
S':'
asbag54
(g75
g56
NtRp1834
(dp1835
g59
(dp1836
sg68
g1822
sg61
(lp1837
g54
(g55
g56
NtRp1838
(dp1839
g59
(dp1840
g67
I4
ssg68
g1834
sg61
(lp1841
S"<Values at 0x2d92fa8: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Batou', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Users\\\\Bussiere\\\\Dropbox\\\\Projets\\\\Yuki\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1842
asbasbasbag54
(g70
g56
NtRp1843
(dp1844
g59
(dp1845
sg68
g1753
sg61
(lp1846
g54
(g75
g56
NtRp1847
(dp1848
g59
(dp1849
g79
g80
ssg68
g1843
sg61
(lp1850
g730
asbag54
(g75
g56
NtRp1851
(dp1852
g59
(dp1853
g86
g87
ssg68
g1843
sg61
(lp1854
S':'
asbag54
(g75
g56
NtRp1855
(dp1856
g59
(dp1857
sg68
g1843
sg61
(lp1858
g54
(g55
g56
NtRp1859
(dp1860
g59
(dp1861
g67
I4
ssg68
g1855
sg61
(lp1862
S'set([])'
p1863
asbasbasbag54
(g70
g56
NtRp1864
(dp1865
g59
(dp1866
sg68
g1753
sg61
(lp1867
g54
(g75
g56
NtRp1868
(dp1869
g59
(dp1870
g79
g80
ssg68
g1864
sg61
(lp1871
g752
asbag54
(g75
g56
NtRp1872
(dp1873
g59
(dp1874
g86
g87
ssg68
g1864
sg61
(lp1875
S':'
asbag54
(g75
g56
NtRp1876
(dp1877
g59
(dp1878
sg68
g1864
sg61
(lp1879
g54
(g55
g56
NtRp1880
(dp1881
g59
(dp1882
g67
I4
ssg68
g1876
sg61
(lp1883
g765
asbasbasbag54
(g70
g56
NtRp1884
(dp1885
g59
(dp1886
sg68
g1753
sg61
(lp1887
g54
(g75
g56
NtRp1888
(dp1889
g59
(dp1890
g79
g80
ssg68
g1884
sg61
(lp1891
g774
asbag54
(g75
g56
NtRp1892
(dp1893
g59
(dp1894
g86
g87
ssg68
g1884
sg61
(lp1895
S':'
asbag54
(g75
g56
NtRp1896
(dp1897
g59
(dp1898
sg68
g1884
sg61
(lp1899
g54
(g55
g56
NtRp1900
(dp1901
g59
(dp1902
g67
I4
ssg68
g1896
sg61
(lp1903
g787
asbasbasbag54
(g70
g56
NtRp1904
(dp1905
g59
(dp1906
sg68
g1753
sg61
(lp1907
g54
(g75
g56
NtRp1908
(dp1909
g59
(dp1910
g79
g80
ssg68
g1904
sg61
(lp1911
g1059
asbag54
(g75
g56
NtRp1912
(dp1913
g59
(dp1914
g86
g87
ssg68
g1904
sg61
(lp1915
S':'
asbag54
(g75
g56
NtRp1916
(dp1917
g59
(dp1918
sg68
g1904
sg61
(lp1919
g54
(g55
g56
NtRp1920
(dp1921
g59
(dp1922
g67
I4
ssg68
g1916
sg61
(lp1923
g765
asbasbasbag54
(g70
g56
NtRp1924
(dp1925
g59
(dp1926
sg68
g1753
sg61
(lp1927
g54
(g75
g56
NtRp1928
(dp1929
g59
(dp1930
g79
g80
ssg68
g1924
sg61
(lp1931
g1080
asbag54
(g75
g56
NtRp1932
(dp1933
g59
(dp1934
g86
g87
ssg68
g1924
sg61
(lp1935
S':'
asbag54
(g75
g56
NtRp1936
(dp1937
g59
(dp1938
sg68
g1924
sg61
(lp1939
g54
(g55
g56
NtRp1940
(dp1941
g59
(dp1942
g67
I4
ssg68
g1936
sg61
(lp1943
g765
asbasbasbag54
(g70
g56
NtRp1944
(dp1945
g59
(dp1946
sg68
g1753
sg61
(lp1947
g54
(g75
g56
NtRp1948
(dp1949
g59
(dp1950
g79
g80
ssg68
g1944
sg61
(lp1951
g1318
asbag54
(g75
g56
NtRp1952
(dp1953
g59
(dp1954
g86
g87
ssg68
g1944
sg61
(lp1955
S':'
asbag54
(g75
g56
NtRp1956
(dp1957
g59
(dp1958
sg68
g1944
sg61
(lp1959
g54
(g55
g56
NtRp1960
(dp1961
g59
(dp1962
g67
I4
ssg68
g1956
sg61
(lp1963
g1331
asbasbasbag54
(g70
g56
NtRp1964
(dp1965
g59
(dp1966
sg68
g1753
sg61
(lp1967
g54
(g75
g56
NtRp1968
(dp1969
g59
(dp1970
g79
g80
ssg68
g1964
sg61
(lp1971
g1361
asbag54
(g75
g56
NtRp1972
(dp1973
g59
(dp1974
g86
g87
ssg68
g1964
sg61
(lp1975
S':'
asbag54
(g75
g56
NtRp1976
(dp1977
g59
(dp1978
sg68
g1964
sg61
(lp1979
g54
(g55
g56
NtRp1980
(dp1981
g59
(dp1982
g67
I4
ssg68
g1976
sg61
(lp1983
g54
(g63
g56
NtRp1984
(dp1985
g59
(dp1986
g67
I3
ssg68
Nsg61
(lp1987
g54
(g70
g56
NtRp1988
(dp1989
g59
(dp1990
sg68
g1984
sg61
(lp1991
g54
(g75
g56
NtRp1992
(dp1993
g59
(dp1994
sg68
g1988
sg61
(lp1995
g54
(g55
g56
NtRp1996
(dp1997
g59
(dp1998
g67
I3
ssg68
g1992
sg61
(lp1999
S'1'
asbasbasbag54
(g70
g56
NtRp2000
(dp2001
g59
(dp2002
sg68
g1984
sg61
(lp2003
g54
(g75
g56
NtRp2004
(dp2005
g59
(dp2006
sg68
g2000
sg61
(lp2007
g54
(g55
g56
NtRp2008
(dp2009
g59
(dp2010
g67
I3
ssg68
g2004
sg61
(lp2011
S'99'
p2012
asbasbasbag54
(g70
g56
NtRp2013
(dp2014
g59
(dp2015
sg68
g1984
sg61
(lp2016
g54
(g75
g56
NtRp2017
(dp2018
g59
(dp2019
sg68
g2013
sg61
(lp2020
g54
(g55
g56
NtRp2021
(dp2022
g59
(dp2023
g67
I3
ssg68
g2017
sg61
(lp2024
S'7'
asbasbasbag54
(g70
g56
NtRp2025
(dp2026
g59
(dp2027
sg68
g1984
sg61
(lp2028
g54
(g75
g56
NtRp2029
(dp2030
g59
(dp2031
sg68
g2025
sg61
(lp2032
g54
(g55
g56
NtRp2033
(dp2034
g59
(dp2035
g67
I3
ssg68
g2029
sg61
(lp2036
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p2037
asbasbasbag54
(g70
g56
NtRp2038
(dp2039
g59
(dp2040
sg68
g1984
sg61
(lp2041
g54
(g75
g56
NtRp2042
(dp2043
g59
(dp2044
sg68
g2038
sg61
(lp2045
g54
(g55
g56
NtRp2046
(dp2047
g59
(dp2048
g67
I3
ssg68
g2042
sg61
(lp2049
g1440
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp2050
(dp2051
g59
(dp2052
sg68
g64
sg61
(lp2053
g54
(g75
g56
NtRp2054
(dp2055
g59
(dp2056
g79
g80
ssg68
g2050
sg61
(lp2057
S'is_https'
p2058
asbag54
(g75
g56
NtRp2059
(dp2060
g59
(dp2061
g86
g87
ssg68
g2050
sg61
(lp2062
S':'
asbag54
(g75
g56
NtRp2063
(dp2064
g59
(dp2065
sg68
g2050
sg61
(lp2066
g54
(g55
g56
NtRp2067
(dp2068
g59
(dp2069
g67
I5
ssg68
g2063
sg61
(lp2070
g765
asbasbasbag54
(g70
g56
NtRp2071
(dp2072
g59
(dp2073
sg68
g64
sg61
(lp2074
g54
(g75
g56
NtRp2075
(dp2076
g59
(dp2077
g79
g80
ssg68
g2071
sg61
(lp2078
S'is_local'
p2079
asbag54
(g75
g56
NtRp2080
(dp2081
g59
(dp2082
g86
g87
ssg68
g2071
sg61
(lp2083
S':'
asbag54
(g75
g56
NtRp2084
(dp2085
g59
(dp2086
sg68
g2071
sg61
(lp2087
g54
(g55
g56
NtRp2088
(dp2089
g59
(dp2090
g67
I5
ssg68
g2084
sg61
(lp2091
g97
asbasbasbag54
(g70
g56
NtRp2092
(dp2093
g59
(dp2094
sg68
g64
sg61
(lp2095
g54
(g75
g56
NtRp2096
(dp2097
g59
(dp2098
g79
g80
ssg68
g2092
sg61
(lp2099
S'is_restful'
p2100
asbag54
(g75
g56
NtRp2101
(dp2102
g59
(dp2103
g86
g87
ssg68
g2092
sg61
(lp2104
S':'
asbag54
(g75
g56
NtRp2105
(dp2106
g59
(dp2107
sg68
g2092
sg61
(lp2108
g54
(g55
g56
NtRp2109
(dp2110
g59
(dp2111
g67
I5
ssg68
g2105
sg61
(lp2112
g765
asbasbasbag54
(g70
g56
NtRp2113
(dp2114
g59
(dp2115
sg68
g64
sg61
(lp2116
g54
(g75
g56
NtRp2117
(dp2118
g59
(dp2119
g79
g80
ssg68
g2113
sg61
(lp2120
S'now'
p2121
asbag54
(g75
g56
NtRp2122
(dp2123
g59
(dp2124
g86
g87
ssg68
g2113
sg61
(lp2125
S':'
asbag54
(g75
g56
NtRp2126
(dp2127
g59
(dp2128
sg68
g2113
sg61
(lp2129
g54
(g55
g56
NtRp2130
(dp2131
g59
(dp2132
g67
I5
ssg68
g2126
sg61
(lp2133
S'datetime.datetime(2012, 3, 11, 3, 17, 11, 300000)'
p2134
asbasbasbag54
(g70
g56
NtRp2135
(dp2136
g59
(dp2137
sg68
g64
sg61
(lp2138
g54
(g75
g56
NtRp2139
(dp2140
g59
(dp2141
g79
g80
ssg68
g2135
sg61
(lp2142
S'post_vars'
p2143
asbag54
(g75
g56
NtRp2144
(dp2145
g59
(dp2146
g86
g87
ssg68
g2135
sg61
(lp2147
S':'
asbag54
(g75
g56
NtRp2148
(dp2149
g59
(dp2150
sg68
g2135
sg61
(lp2151
g54
(g55
g56
NtRp2152
(dp2153
g59
(dp2154
g67
I5
ssg68
g2148
sg61
(lp2155
g54
(g63
g56
NtRp2156
(dp2157
g59
(dp2158
g67
I4
ssg68
Nsg61
(lp2159
sbasbasbasbag54
(g70
g56
NtRp2160
(dp2161
g59
(dp2162
sg68
g64
sg61
(lp2163
g54
(g75
g56
NtRp2164
(dp2165
g59
(dp2166
g79
g80
ssg68
g2160
sg61
(lp2167
S'raw_args'
p2168
asbag54
(g75
g56
NtRp2169
(dp2170
g59
(dp2171
g86
g87
ssg68
g2160
sg61
(lp2172
S':'
asbag54
(g75
g56
NtRp2173
(dp2174
g59
(dp2175
sg68
g2160
sg61
(lp2176
g54
(g55
g56
NtRp2177
(dp2178
g59
(dp2179
g67
I5
ssg68
g2173
sg61
(lp2180
S'README'
p2181
asbasbasbag54
(g70
g56
NtRp2182
(dp2183
g59
(dp2184
sg68
g64
sg61
(lp2185
g54
(g75
g56
NtRp2186
(dp2187
g59
(dp2188
g79
g80
ssg68
g2182
sg61
(lp2189
S'url'
p2190
asbag54
(g75
g56
NtRp2191
(dp2192
g59
(dp2193
g86
g87
ssg68
g2182
sg61
(lp2194
S':'
asbag54
(g75
g56
NtRp2195
(dp2196
g59
(dp2197
sg68
g2182
sg61
(lp2198
g54
(g55
g56
NtRp2199
(dp2200
g59
(dp2201
g67
I5
ssg68
g2195
sg61
(lp2202
S'/admin/default/enable/README'
p2203
asbasbasbag54
(g70
g56
NtRp2204
(dp2205
g59
(dp2206
sg68
g64
sg61
(lp2207
g54
(g75
g56
NtRp2208
(dp2209
g59
(dp2210
g79
g80
ssg68
g2204
sg61
(lp2211
S'utcnow'
p2212
asbag54
(g75
g56
NtRp2213
(dp2214
g59
(dp2215
g86
g87
ssg68
g2204
sg61
(lp2216
S':'
asbag54
(g75
g56
NtRp2217
(dp2218
g59
(dp2219
sg68
g2204
sg61
(lp2220
g54
(g55
g56
NtRp2221
(dp2222
g59
(dp2223
g67
I5
ssg68
g2217
sg61
(lp2224
S'datetime.datetime(2012, 3, 11, 2, 17, 11, 300000)'
p2225
asbasbasbag54
(g70
g56
NtRp2226
(dp2227
g59
(dp2228
sg68
g64
sg61
(lp2229
g54
(g75
g56
NtRp2230
(dp2231
g59
(dp2232
g79
g80
ssg68
g2226
sg61
(lp2233
S'uuid'
p2234
asbag54
(g75
g56
NtRp2235
(dp2236
g59
(dp2237
g86
g87
ssg68
g2226
sg61
(lp2238
S':'
asbag54
(g75
g56
NtRp2239
(dp2240
g59
(dp2241
sg68
g2226
sg61
(lp2242
g54
(g55
g56
NtRp2243
(dp2244
g59
(dp2245
g67
I5
ssg68
g2239
sg61
(lp2246
S'admin/127.0.0.1.2012-03-11.03-17-11.a451f220-72b6-40dc-81a2-fdfbd5dfdd9a'
p2247
asbasbasbag54
(g70
g56
NtRp2248
(dp2249
g59
(dp2250
sg68
g64
sg61
(lp2251
g54
(g75
g56
NtRp2252
(dp2253
g59
(dp2254
g79
g80
ssg68
g2248
sg61
(lp2255
S'vars'
p2256
asbag54
(g75
g56
NtRp2257
(dp2258
g59
(dp2259
g86
g87
ssg68
g2248
sg61
(lp2260
S':'
asbag54
(g75
g56
NtRp2261
(dp2262
g59
(dp2263
sg68
g2248
sg61
(lp2264
g54
(g55
g56
NtRp2265
(dp2266
g59
(dp2267
g67
I5
ssg68
g2261
sg61
(lp2268
g54
(g63
g56
NtRp2269
(dp2270
g59
(dp2271
g67
I4
ssg68
Nsg61
(lp2272
sbasbasbasbag54
(g70
g56
NtRp2273
(dp2274
g59
(dp2275
sg68
g64
sg61
(lp2276
g54
(g75
g56
NtRp2277
(dp2278
g59
(dp2279
g79
g80
ssg68
g2273
sg61
(lp2280
S'wsgi'
p2281
asbag54
(g75
g56
NtRp2282
(dp2283
g59
(dp2284
g86
g87
ssg68
g2273
sg61
(lp2285
S':'
asbag54
(g75
g56
NtRp2286
(dp2287
g59
(dp2288
sg68
g2273
sg61
(lp2289
g54
(g55
g56
NtRp2290
(dp2291
g59
(dp2292
g67
I5
ssg68
g2286
sg61
(lp2293
g54
(g63
g56
NtRp2294
(dp2295
g59
(dp2296
g67
I4
ssg68
Nsg61
(lp2297
g54
(g70
g56
NtRp2298
(dp2299
g59
(dp2300
sg68
g2294
sg61
(lp2301
g54
(g75
g56
NtRp2302
(dp2303
g59
(dp2304
g79
g80
ssg68
g2298
sg61
(lp2305
S'environ'
p2306
asbag54
(g75
g56
NtRp2307
(dp2308
g59
(dp2309
g86
g87
ssg68
g2298
sg61
(lp2310
S':'
asbag54
(g75
g56
NtRp2311
(dp2312
g59
(dp2313
sg68
g2298
sg61
(lp2314
g54
(g55
g56
NtRp2315
(dp2316
g59
(dp2317
g67
I4
ssg68
g2311
sg61
(lp2318
g54
(g63
g56
NtRp2319
(dp2320
g59
(dp2321
g67
I3
ssg68
Nsg61
(lp2322
g54
(g70
g56
NtRp2323
(dp2324
g59
(dp2325
sg68
g2319
sg61
(lp2326
g54
(g75
g56
NtRp2327
(dp2328
g59
(dp2329
g79
g80
ssg68
g2323
sg61
(lp2330
S'CONTENT_LENGTH'
p2331
asbag54
(g75
g56
NtRp2332
(dp2333
g59
(dp2334
g86
g87
ssg68
g2323
sg61
(lp2335
S':'
asbag54
(g75
g56
NtRp2336
(dp2337
g59
(dp2338
sg68
g2323
sg61
(lp2339
g54
(g55
g56
NtRp2340
(dp2341
g59
(dp2342
g67
I3
ssg68
g2336
sg61
(lp2343
S'0'
asbasbasbag54
(g70
g56
NtRp2344
(dp2345
g59
(dp2346
sg68
g2319
sg61
(lp2347
g54
(g75
g56
NtRp2348
(dp2349
g59
(dp2350
g79
g80
ssg68
g2344
sg61
(lp2351
S'HTTP_ACCEPT'
p2352
asbag54
(g75
g56
NtRp2353
(dp2354
g59
(dp2355
g86
g87
ssg68
g2344
sg61
(lp2356
S':'
asbag54
(g75
g56
NtRp2357
(dp2358
g59
(dp2359
sg68
g2344
sg61
(lp2360
g54
(g55
g56
NtRp2361
(dp2362
g59
(dp2363
g67
I3
ssg68
g2357
sg61
(lp2364
g809
asbasbasbag54
(g70
g56
NtRp2365
(dp2366
g59
(dp2367
sg68
g2319
sg61
(lp2368
g54
(g75
g56
NtRp2369
(dp2370
g59
(dp2371
g79
g80
ssg68
g2365
sg61
(lp2372
S'HTTP_ACCEPT_CHARSET'
p2373
asbag54
(g75
g56
NtRp2374
(dp2375
g59
(dp2376
g86
g87
ssg68
g2365
sg61
(lp2377
S':'
asbag54
(g75
g56
NtRp2378
(dp2379
g59
(dp2380
sg68
g2365
sg61
(lp2381
g54
(g55
g56
NtRp2382
(dp2383
g59
(dp2384
g67
I3
ssg68
g2378
sg61
(lp2385
g831
asbasbasbag54
(g70
g56
NtRp2386
(dp2387
g59
(dp2388
sg68
g2319
sg61
(lp2389
g54
(g75
g56
NtRp2390
(dp2391
g59
(dp2392
g79
g80
ssg68
g2386
sg61
(lp2393
S'HTTP_ACCEPT_ENCODING'
p2394
asbag54
(g75
g56
NtRp2395
(dp2396
g59
(dp2397
g86
g87
ssg68
g2386
sg61
(lp2398
S':'
asbag54
(g75
g56
NtRp2399
(dp2400
g59
(dp2401
sg68
g2386
sg61
(lp2402
g54
(g55
g56
NtRp2403
(dp2404
g59
(dp2405
g67
I3
ssg68
g2399
sg61
(lp2406
g853
asbasbasbag54
(g70
g56
NtRp2407
(dp2408
g59
(dp2409
sg68
g2319
sg61
(lp2410
g54
(g75
g56
NtRp2411
(dp2412
g59
(dp2413
g79
g80
ssg68
g2407
sg61
(lp2414
S'HTTP_ACCEPT_LANGUAGE'
p2415
asbag54
(g75
g56
NtRp2416
(dp2417
g59
(dp2418
g86
g87
ssg68
g2407
sg61
(lp2419
S':'
asbag54
(g75
g56
NtRp2420
(dp2421
g59
(dp2422
sg68
g2407
sg61
(lp2423
g54
(g55
g56
NtRp2424
(dp2425
g59
(dp2426
g67
I3
ssg68
g2420
sg61
(lp2427
g875
asbasbasbag54
(g70
g56
NtRp2428
(dp2429
g59
(dp2430
sg68
g2319
sg61
(lp2431
g54
(g75
g56
NtRp2432
(dp2433
g59
(dp2434
g79
g80
ssg68
g2428
sg61
(lp2435
S'HTTP_CONNECTION'
p2436
asbag54
(g75
g56
NtRp2437
(dp2438
g59
(dp2439
g86
g87
ssg68
g2428
sg61
(lp2440
S':'
asbag54
(g75
g56
NtRp2441
(dp2442
g59
(dp2443
sg68
g2428
sg61
(lp2444
g54
(g55
g56
NtRp2445
(dp2446
g59
(dp2447
g67
I3
ssg68
g2441
sg61
(lp2448
g897
asbasbasbag54
(g70
g56
NtRp2449
(dp2450
g59
(dp2451
sg68
g2319
sg61
(lp2452
g54
(g75
g56
NtRp2453
(dp2454
g59
(dp2455
g79
g80
ssg68
g2449
sg61
(lp2456
S'HTTP_CONTENT_LENGTH'
p2457
asbag54
(g75
g56
NtRp2458
(dp2459
g59
(dp2460
g86
g87
ssg68
g2449
sg61
(lp2461
S':'
asbag54
(g75
g56
NtRp2462
(dp2463
g59
(dp2464
sg68
g2449
sg61
(lp2465
g54
(g55
g56
NtRp2466
(dp2467
g59
(dp2468
g67
I3
ssg68
g2462
sg61
(lp2469
S'0'
asbasbasbag54
(g70
g56
NtRp2470
(dp2471
g59
(dp2472
sg68
g2319
sg61
(lp2473
g54
(g75
g56
NtRp2474
(dp2475
g59
(dp2476
g79
g80
ssg68
g2470
sg61
(lp2477
S'HTTP_COOKIE'
p2478
asbag54
(g75
g56
NtRp2479
(dp2480
g59
(dp2481
g86
g87
ssg68
g2470
sg61
(lp2482
S':'
asbag54
(g75
g56
NtRp2483
(dp2484
g59
(dp2485
sg68
g2470
sg61
(lp2486
g54
(g55
g56
NtRp2487
(dp2488
g59
(dp2489
g67
I3
ssg68
g2483
sg61
(lp2490
g940
asbasbasbag54
(g70
g56
NtRp2491
(dp2492
g59
(dp2493
sg68
g2319
sg61
(lp2494
g54
(g75
g56
NtRp2495
(dp2496
g59
(dp2497
g79
g80
ssg68
g2491
sg61
(lp2498
S'HTTP_HOST'
p2499
asbag54
(g75
g56
NtRp2500
(dp2501
g59
(dp2502
g86
g87
ssg68
g2491
sg61
(lp2503
S':'
asbag54
(g75
g56
NtRp2504
(dp2505
g59
(dp2506
sg68
g2491
sg61
(lp2507
g54
(g55
g56
NtRp2508
(dp2509
g59
(dp2510
g67
I3
ssg68
g2504
sg61
(lp2511
g962
asbasbasbag54
(g70
g56
NtRp2512
(dp2513
g59
(dp2514
sg68
g2319
sg61
(lp2515
g54
(g75
g56
NtRp2516
(dp2517
g59
(dp2518
g79
g80
ssg68
g2512
sg61
(lp2519
S'HTTP_ORIGIN'
p2520
asbag54
(g75
g56
NtRp2521
(dp2522
g59
(dp2523
g86
g87
ssg68
g2512
sg61
(lp2524
S':'
asbag54
(g75
g56
NtRp2525
(dp2526
g59
(dp2527
sg68
g2512
sg61
(lp2528
g54
(g55
g56
NtRp2529
(dp2530
g59
(dp2531
g67
I3
ssg68
g2525
sg61
(lp2532
g984
asbasbasbag54
(g70
g56
NtRp2533
(dp2534
g59
(dp2535
sg68
g2319
sg61
(lp2536
g54
(g75
g56
NtRp2537
(dp2538
g59
(dp2539
g79
g80
ssg68
g2533
sg61
(lp2540
S'HTTP_REFERER'
p2541
asbag54
(g75
g56
NtRp2542
(dp2543
g59
(dp2544
g86
g87
ssg68
g2533
sg61
(lp2545
S':'
asbag54
(g75
g56
NtRp2546
(dp2547
g59
(dp2548
sg68
g2533
sg61
(lp2549
g54
(g55
g56
NtRp2550
(dp2551
g59
(dp2552
g67
I3
ssg68
g2546
sg61
(lp2553
g1006
asbasbasbag54
(g70
g56
NtRp2554
(dp2555
g59
(dp2556
sg68
g2319
sg61
(lp2557
g54
(g75
g56
NtRp2558
(dp2559
g59
(dp2560
g79
g80
ssg68
g2554
sg61
(lp2561
S'HTTP_USER_AGENT'
p2562
asbag54
(g75
g56
NtRp2563
(dp2564
g59
(dp2565
g86
g87
ssg68
g2554
sg61
(lp2566
S':'
asbag54
(g75
g56
NtRp2567
(dp2568
g59
(dp2569
sg68
g2554
sg61
(lp2570
g54
(g55
g56
NtRp2571
(dp2572
g59
(dp2573
g67
I3
ssg68
g2567
sg61
(lp2574
g1028
asbasbasbag54
(g70
g56
NtRp2575
(dp2576
g59
(dp2577
sg68
g2319
sg61
(lp2578
g54
(g75
g56
NtRp2579
(dp2580
g59
(dp2581
g79
g80
ssg68
g2575
sg61
(lp2582
S'HTTP_X_REQUESTED_WITH'
p2583
asbag54
(g75
g56
NtRp2584
(dp2585
g59
(dp2586
g86
g87
ssg68
g2575
sg61
(lp2587
S':'
asbag54
(g75
g56
NtRp2588
(dp2589
g59
(dp2590
sg68
g2575
sg61
(lp2591
g54
(g55
g56
NtRp2592
(dp2593
g59
(dp2594
g67
I3
ssg68
g2588
sg61
(lp2595
g1050
asbasbasbag54
(g70
g56
NtRp2596
(dp2597
g59
(dp2598
sg68
g2319
sg61
(lp2599
g54
(g75
g56
NtRp2600
(dp2601
g59
(dp2602
g79
g80
ssg68
g2596
sg61
(lp2603
S'PATH_INFO'
p2604
asbag54
(g75
g56
NtRp2605
(dp2606
g59
(dp2607
g86
g87
ssg68
g2596
sg61
(lp2608
S':'
asbag54
(g75
g56
NtRp2609
(dp2610
g59
(dp2611
sg68
g2596
sg61
(lp2612
g54
(g55
g56
NtRp2613
(dp2614
g59
(dp2615
g67
I3
ssg68
g2609
sg61
(lp2616
g1114
asbasbasbag54
(g70
g56
NtRp2617
(dp2618
g59
(dp2619
sg68
g2319
sg61
(lp2620
g54
(g75
g56
NtRp2621
(dp2622
g59
(dp2623
g79
g80
ssg68
g2617
sg61
(lp2624
S'QUERY_STRING'
p2625
asbag54
(g75
g56
NtRp2626
(dp2627
g59
(dp2628
g86
g87
ssg68
g2617
sg61
(lp2629
S':'
asbag54
(g75
g56
NtRp2630
(dp2631
g59
(dp2632
sg68
g2617
sg61
(lp2633
g54
(g55
g56
NtRp2634
(dp2635
g59
(dp2636
g67
I3
ssg68
g2630
sg61
(lp2637
S''
asbasbasbag54
(g70
g56
NtRp2638
(dp2639
g59
(dp2640
sg68
g2319
sg61
(lp2641
g54
(g75
g56
NtRp2642
(dp2643
g59
(dp2644
g79
g80
ssg68
g2638
sg61
(lp2645
S'REMOTE_ADDR'
p2646
asbag54
(g75
g56
NtRp2647
(dp2648
g59
(dp2649
g86
g87
ssg68
g2638
sg61
(lp2650
S':'
asbag54
(g75
g56
NtRp2651
(dp2652
g59
(dp2653
sg68
g2638
sg61
(lp2654
g54
(g55
g56
NtRp2655
(dp2656
g59
(dp2657
g67
I3
ssg68
g2651
sg61
(lp2658
g200
asbasbasbag54
(g70
g56
NtRp2659
(dp2660
g59
(dp2661
sg68
g2319
sg61
(lp2662
g54
(g75
g56
NtRp2663
(dp2664
g59
(dp2665
g79
g80
ssg68
g2659
sg61
(lp2666
S'REMOTE_PORT'
p2667
asbag54
(g75
g56
NtRp2668
(dp2669
g59
(dp2670
g86
g87
ssg68
g2659
sg61
(lp2671
S':'
asbag54
(g75
g56
NtRp2672
(dp2673
g59
(dp2674
sg68
g2659
sg61
(lp2675
g54
(g55
g56
NtRp2676
(dp2677
g59
(dp2678
g67
I3
ssg68
g2672
sg61
(lp2679
g1178
asbasbasbag54
(g70
g56
NtRp2680
(dp2681
g59
(dp2682
sg68
g2319
sg61
(lp2683
g54
(g75
g56
NtRp2684
(dp2685
g59
(dp2686
g79
g80
ssg68
g2680
sg61
(lp2687
S'REQUEST_METHOD'
p2688
asbag54
(g75
g56
NtRp2689
(dp2690
g59
(dp2691
g86
g87
ssg68
g2680
sg61
(lp2692
S':'
asbag54
(g75
g56
NtRp2693
(dp2694
g59
(dp2695
sg68
g2680
sg61
(lp2696
g54
(g55
g56
NtRp2697
(dp2698
g59
(dp2699
g67
I3
ssg68
g2693
sg61
(lp2700
g1200
asbasbasbag54
(g70
g56
NtRp2701
(dp2702
g59
(dp2703
sg68
g2319
sg61
(lp2704
g54
(g75
g56
NtRp2705
(dp2706
g59
(dp2707
g79
g80
ssg68
g2701
sg61
(lp2708
S'SCRIPT_NAME'
p2709
asbag54
(g75
g56
NtRp2710
(dp2711
g59
(dp2712
g86
g87
ssg68
g2701
sg61
(lp2713
S':'
asbag54
(g75
g56
NtRp2714
(dp2715
g59
(dp2716
sg68
g2701
sg61
(lp2717
g54
(g55
g56
NtRp2718
(dp2719
g59
(dp2720
g67
I3
ssg68
g2714
sg61
(lp2721
S''
asbasbasbag54
(g70
g56
NtRp2722
(dp2723
g59
(dp2724
sg68
g2319
sg61
(lp2725
g54
(g75
g56
NtRp2726
(dp2727
g59
(dp2728
g79
g80
ssg68
g2722
sg61
(lp2729
S'SERVER_NAME'
p2730
asbag54
(g75
g56
NtRp2731
(dp2732
g59
(dp2733
g86
g87
ssg68
g2722
sg61
(lp2734
S':'
asbag54
(g75
g56
NtRp2735
(dp2736
g59
(dp2737
sg68
g2722
sg61
(lp2738
g54
(g55
g56
NtRp2739
(dp2740
g59
(dp2741
g67
I3
ssg68
g2735
sg61
(lp2742
g1243
asbasbasbag54
(g70
g56
NtRp2743
(dp2744
g59
(dp2745
sg68
g2319
sg61
(lp2746
g54
(g75
g56
NtRp2747
(dp2748
g59
(dp2749
g79
g80
ssg68
g2743
sg61
(lp2750
S'SERVER_PORT'
p2751
asbag54
(g75
g56
NtRp2752
(dp2753
g59
(dp2754
g86
g87
ssg68
g2743
sg61
(lp2755
S':'
asbag54
(g75
g56
NtRp2756
(dp2757
g59
(dp2758
sg68
g2743
sg61
(lp2759
g54
(g55
g56
NtRp2760
(dp2761
g59
(dp2762
g67
I3
ssg68
g2756
sg61
(lp2763
g1265
asbasbasbag54
(g70
g56
NtRp2764
(dp2765
g59
(dp2766
sg68
g2319
sg61
(lp2767
g54
(g75
g56
NtRp2768
(dp2769
g59
(dp2770
g79
g80
ssg68
g2764
sg61
(lp2771
S'SERVER_PROTOCOL'
p2772
asbag54
(g75
g56
NtRp2773
(dp2774
g59
(dp2775
g86
g87
ssg68
g2764
sg61
(lp2776
S':'
asbag54
(g75
g56
NtRp2777
(dp2778
g59
(dp2779
sg68
g2764
sg61
(lp2780
g54
(g55
g56
NtRp2781
(dp2782
g59
(dp2783
g67
I3
ssg68
g2777
sg61
(lp2784
g1287
asbasbasbag54
(g70
g56
NtRp2785
(dp2786
g59
(dp2787
sg68
g2319
sg61
(lp2788
g54
(g75
g56
NtRp2789
(dp2790
g59
(dp2791
g79
g80
ssg68
g2785
sg61
(lp2792
S'SERVER_SOFTWARE'
p2793
asbag54
(g75
g56
NtRp2794
(dp2795
g59
(dp2796
g86
g87
ssg68
g2785
sg61
(lp2797
S':'
asbag54
(g75
g56
NtRp2798
(dp2799
g59
(dp2800
sg68
g2785
sg61
(lp2801
g54
(g55
g56
NtRp2802
(dp2803
g59
(dp2804
g67
I3
ssg68
g2798
sg61
(lp2805
g1309
asbasbasbag54
(g70
g56
NtRp2806
(dp2807
g59
(dp2808
sg68
g2319
sg61
(lp2809
g54
(g75
g56
NtRp2810
(dp2811
g59
(dp2812
g79
g80
ssg68
g2806
sg61
(lp2813
S'wsgi.errors'
p2814
asbag54
(g75
g56
NtRp2815
(dp2816
g59
(dp2817
g86
g87
ssg68
g2806
sg61
(lp2818
S':'
asbag54
(g75
g56
NtRp2819
(dp2820
g59
(dp2821
sg68
g2806
sg61
(lp2822
g54
(g55
g56
NtRp2823
(dp2824
g59
(dp2825
g67
I3
ssg68
g2819
sg61
(lp2826
S"<open file '<stderr>', mode 'w' at 0x01F400B0>"
p2827
asbasbasbag54
(g70
g56
NtRp2828
(dp2829
g59
(dp2830
sg68
g2319
sg61
(lp2831
g54
(g75
g56
NtRp2832
(dp2833
g59
(dp2834
g79
g80
ssg68
g2828
sg61
(lp2835
S'wsgi.file_wrapper'
p2836
asbag54
(g75
g56
NtRp2837
(dp2838
g59
(dp2839
g86
g87
ssg68
g2828
sg61
(lp2840
S':'
asbag54
(g75
g56
NtRp2841
(dp2842
g59
(dp2843
sg68
g2828
sg61
(lp2844
g54
(g55
g56
NtRp2845
(dp2846
g59
(dp2847
g67
I3
ssg68
g2841
sg61
(lp2848
S'<class wsgiref.util.FileWrapper at 0x02B2E570>'
p2849
asbasbasbag54
(g70
g56
NtRp2850
(dp2851
g59
(dp2852
sg68
g2319
sg61
(lp2853
g54
(g75
g56
NtRp2854
(dp2855
g59
(dp2856
g79
g80
ssg68
g2850
sg61
(lp2857
S'wsgi.input'
p2858
asbag54
(g75
g56
NtRp2859
(dp2860
g59
(dp2861
g86
g87
ssg68
g2850
sg61
(lp2862
S':'
asbag54
(g75
g56
NtRp2863
(dp2864
g59
(dp2865
sg68
g2850
sg61
(lp2866
g54
(g55
g56
NtRp2867
(dp2868
g59
(dp2869
g67
I3
ssg68
g2863
sg61
(lp2870
S"<open file '<fdopen>', mode 'w+b' at 0x06000B18>"
p2871
asbasbasbag54
(g70
g56
NtRp2872
(dp2873
g59
(dp2874
sg68
g2319
sg61
(lp2875
g54
(g75
g56
NtRp2876
(dp2877
g59
(dp2878
g79
g80
ssg68
g2872
sg61
(lp2879
S'wsgi.multiprocess'
p2880
asbag54
(g75
g56
NtRp2881
(dp2882
g59
(dp2883
g86
g87
ssg68
g2872
sg61
(lp2884
S':'
asbag54
(g75
g56
NtRp2885
(dp2886
g59
(dp2887
sg68
g2872
sg61
(lp2888
g54
(g55
g56
NtRp2889
(dp2890
g59
(dp2891
g67
I3
ssg68
g2885
sg61
(lp2892
g765
asbasbasbag54
(g70
g56
NtRp2893
(dp2894
g59
(dp2895
sg68
g2319
sg61
(lp2896
g54
(g75
g56
NtRp2897
(dp2898
g59
(dp2899
g79
g80
ssg68
g2893
sg61
(lp2900
S'wsgi.multithread'
p2901
asbag54
(g75
g56
NtRp2902
(dp2903
g59
(dp2904
g86
g87
ssg68
g2893
sg61
(lp2905
S':'
asbag54
(g75
g56
NtRp2906
(dp2907
g59
(dp2908
sg68
g2893
sg61
(lp2909
g54
(g55
g56
NtRp2910
(dp2911
g59
(dp2912
g67
I3
ssg68
g2906
sg61
(lp2913
g97
asbasbasbag54
(g70
g56
NtRp2914
(dp2915
g59
(dp2916
sg68
g2319
sg61
(lp2917
g54
(g75
g56
NtRp2918
(dp2919
g59
(dp2920
g79
g80
ssg68
g2914
sg61
(lp2921
S'wsgi.run_once'
p2922
asbag54
(g75
g56
NtRp2923
(dp2924
g59
(dp2925
g86
g87
ssg68
g2914
sg61
(lp2926
S':'
asbag54
(g75
g56
NtRp2927
(dp2928
g59
(dp2929
sg68
g2914
sg61
(lp2930
g54
(g55
g56
NtRp2931
(dp2932
g59
(dp2933
g67
I3
ssg68
g2927
sg61
(lp2934
g765
asbasbasbag54
(g70
g56
NtRp2935
(dp2936
g59
(dp2937
sg68
g2319
sg61
(lp2938
g54
(g75
g56
NtRp2939
(dp2940
g59
(dp2941
g79
g80
ssg68
g2935
sg61
(lp2942
S'wsgi.url_scheme'
p2943
asbag54
(g75
g56
NtRp2944
(dp2945
g59
(dp2946
g86
g87
ssg68
g2935
sg61
(lp2947
S':'
asbag54
(g75
g56
NtRp2948
(dp2949
g59
(dp2950
sg68
g2935
sg61
(lp2951
g54
(g55
g56
NtRp2952
(dp2953
g59
(dp2954
g67
I3
ssg68
g2948
sg61
(lp2955
g1591
asbasbasbag54
(g70
g56
NtRp2956
(dp2957
g59
(dp2958
sg68
g2319
sg61
(lp2959
g54
(g75
g56
NtRp2960
(dp2961
g59
(dp2962
g79
g80
ssg68
g2956
sg61
(lp2963
S'wsgi.version'
p2964
asbag54
(g75
g56
NtRp2965
(dp2966
g59
(dp2967
g86
g87
ssg68
g2956
sg61
(lp2968
S':'
asbag54
(g75
g56
NtRp2969
(dp2970
g59
(dp2971
sg68
g2956
sg61
(lp2972
g54
(g55
g56
NtRp2973
(dp2974
g59
(dp2975
g67
I3
ssg68
g2969
sg61
(lp2976
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2977
(lp2978
(dp2979
S'file'
p2980
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\gluon\\restricted.py'
p2981
sS'dump'
p2982
(dp2983
sS'lnum'
p2984
I205
sS'lines'
p2985
(dp2986
sS'call'
p2987
S'(code="# coding: utf8\\n\\nEXPERIMENTAL_STUFF = True\\n\\nif EX...te\'))\\n\\n\\n\\nresponse._vars=response._caller(enable)\\n", environment={\'A\': <class \'gluon.html.A\'>, \'ALLOW_TOGGLE\': \'true\', \'A_button\': <function A_button at 0x05E5AA70>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, ...}, layer=r\'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\applications\\admin\\controllers/default.py\')'
p2988
sS'func'
p2989
S'restricted'
p2990
sa(dp2991
g2980
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\applications\\admin\\controllers\\default.py'
p2992
sg2982
(dp2993
sg2984
I1352
sg2985
(dp2994
I1344
S'def reload_routes():'
p2995
sI1345
S'    """ Reload routes.py """'
p2996
sI1346
S'    import gluon.rewrite'
p2997
sI1347
S'    gluon.rewrite.load()'
p2998
sI1348
S"    redirect(URL('site'))"
p2999
sI1349
S''
sI1350
S''
sI1341
S'    else:'
p3000
sI1342
S'        return dict(form=T("Disabled"))'
p3001
sI1343
S''
ssg2987
S'()'
p3002
sg2989
S'<module>'
p3003
sa(dp3004
g2980
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\gluon\\globals.py'
p3005
sg2982
(dp3006
sg2984
I173
sg2985
(dp3007
sg2987
S'(f=<function enable at 0x0644B270>)'
p3008
sg2989
S'<lambda>'
p3009
sa(dp3010
g2980
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\applications\\admin\\controllers\\default.py'
p3011
sg2982
(dp3012
sg2984
I344
sg2985
(dp3013
I339
S"    filename = os.path.join(apath(app, r=request),'DISABLED')"
p3014
sI340
S'    if os.path.exists(filename):'
p3015
sI341
S'        os.unlink(filename)'
p3016
sI342
S"        return SPAN(T('Disable'),_style='color:green')"
p3017
sI343
S'    else:'
p3018
sI344
S"        open(filename,'wb').write(time.ctime())"
p3019
sI345
S"        return SPAN(T('Enable'),_style='color:red')"
p3020
sI346
S''
sI347
S'def peek():'
p3021
sI348
S'    """ Visualize object code """'
p3022
ssg2987
S'()'
p3023
sg2989
S'enable'
p3024
sasS'pyver'
p3025
S'Python 2.5.4: C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\web2py.exe'
p3026
sS'session'
p3027
g54
(g55
g56
NtRp3028
(dp3029
g59
(dp3030
sg61
(lp3031
g54
(g63
g56
NtRp3032
(dp3033
g59
(dp3034
g67
I5
ssg68
Nsg61
(lp3035
g54
(g70
g56
NtRp3036
(dp3037
g59
(dp3038
sg68
g3032
sg61
(lp3039
g54
(g75
g56
NtRp3040
(dp3041
g59
(dp3042
g79
g80
ssg68
g3036
sg61
(lp3043
S'authorized'
p3044
asbag54
(g75
g56
NtRp3045
(dp3046
g59
(dp3047
g86
g87
ssg68
g3036
sg61
(lp3048
S':'
asbag54
(g75
g56
NtRp3049
(dp3050
g59
(dp3051
sg68
g3036
sg61
(lp3052
g54
(g55
g56
NtRp3053
(dp3054
g59
(dp3055
g67
I5
ssg68
g3049
sg61
(lp3056
g97
asbasbasbag54
(g70
g56
NtRp3057
(dp3058
g59
(dp3059
sg68
g3032
sg61
(lp3060
g54
(g75
g56
NtRp3061
(dp3062
g59
(dp3063
g79
g80
ssg68
g3057
sg61
(lp3064
S'check_version'
p3065
asbag54
(g75
g56
NtRp3066
(dp3067
g59
(dp3068
g86
g87
ssg68
g3057
sg61
(lp3069
S':'
asbag54
(g75
g56
NtRp3070
(dp3071
g59
(dp3072
sg68
g3057
sg61
(lp3073
g54
(g55
g56
NtRp3074
(dp3075
g59
(dp3076
g67
I5
ssg68
g3070
sg61
(lp3077
g765
asbasbasbag54
(g70
g56
NtRp3078
(dp3079
g59
(dp3080
sg68
g3032
sg61
(lp3081
g54
(g75
g56
NtRp3082
(dp3083
g59
(dp3084
g79
g80
ssg68
g3078
sg61
(lp3085
S'last_time'
p3086
asbag54
(g75
g56
NtRp3087
(dp3088
g59
(dp3089
g86
g87
ssg68
g3078
sg61
(lp3090
S':'
asbag54
(g75
g56
NtRp3091
(dp3092
g59
(dp3093
sg68
g3078
sg61
(lp3094
g54
(g55
g56
NtRp3095
(dp3096
g59
(dp3097
g67
I5
ssg68
g3091
sg61
(lp3098
S'1331432231.332'
p3099
asbasbasbasbasbsS'etype'
p3100
S"<type 'exceptions.IOError'>"
p3101
sS'date'
p3102
S'Sun Mar 11 03:17:11 2012'
p3103
sS'response'
p3104
g54
(g55
g56
NtRp3105
(dp3106
g59
(dp3107
sg61
(lp3108
g54
(g63
g56
NtRp3109
(dp3110
g59
(dp3111
g67
I5
ssg68
Nsg61
(lp3112
g54
(g70
g56
NtRp3113
(dp3114
g59
(dp3115
sg68
g3109
sg61
(lp3116
g54
(g75
g56
NtRp3117
(dp3118
g59
(dp3119
g79
g80
ssg68
g3113
sg61
(lp3120
g165
asbag54
(g75
g56
NtRp3121
(dp3122
g59
(dp3123
g86
g87
ssg68
g3113
sg61
(lp3124
S':'
asbag54
(g75
g56
NtRp3125
(dp3126
g59
(dp3127
sg68
g3113
sg61
(lp3128
g54
(g55
g56
NtRp3129
(dp3130
g59
(dp3131
g67
I5
ssg68
g3125
sg61
(lp3132
S'<cStringIO.StringO object at 0x0604B3A0>'
p3133
asbasbasbag54
(g70
g56
NtRp3134
(dp3135
g59
(dp3136
sg68
g3109
sg61
(lp3137
g54
(g75
g56
NtRp3138
(dp3139
g59
(dp3140
g79
g80
ssg68
g3134
sg61
(lp3141
g231
asbag54
(g75
g56
NtRp3142
(dp3143
g59
(dp3144
g86
g87
ssg68
g3134
sg61
(lp3145
S':'
asbag54
(g75
g56
NtRp3146
(dp3147
g59
(dp3148
sg68
g3134
sg61
(lp3149
g54
(g55
g56
NtRp3150
(dp3151
g59
(dp3152
g67
I5
ssg68
g3146
sg61
(lp3153
g54
(g63
g56
NtRp3154
(dp3155
g59
(dp3156
g67
I4
ssg68
Nsg61
(lp3157
g54
(g70
g56
NtRp3158
(dp3159
g59
(dp3160
sg68
g3154
sg61
(lp3161
g54
(g75
g56
NtRp3162
(dp3163
g59
(dp3164
g79
g80
ssg68
g3158
sg61
(lp3165
S'session_id_admin'
p3166
asbag54
(g75
g56
NtRp3167
(dp3168
g59
(dp3169
g86
g87
ssg68
g3158
sg61
(lp3170
S':'
asbag54
(g75
g56
NtRp3171
(dp3172
g59
(dp3173
sg68
g3158
sg61
(lp3174
g54
(g55
g56
NtRp3175
(dp3176
g59
(dp3177
g67
I4
ssg68
g3171
sg61
(lp3178
g54
(g63
g56
NtRp3179
(dp3180
g59
(dp3181
g67
I3
ssg68
Nsg61
(lp3182
g54
(g70
g56
NtRp3183
(dp3184
g59
(dp3185
sg68
g3179
sg61
(lp3186
g54
(g75
g56
NtRp3187
(dp3188
g59
(dp3189
g79
g80
ssg68
g3183
sg61
(lp3190
g281
asbag54
(g75
g56
NtRp3191
(dp3192
g59
(dp3193
g86
g87
ssg68
g3183
sg61
(lp3194
S':'
asbag54
(g75
g56
NtRp3195
(dp3196
g59
(dp3197
sg68
g3183
sg61
(lp3198
g54
(g55
g56
NtRp3199
(dp3200
g59
(dp3201
g67
I3
ssg68
g3195
sg61
(lp3202
S''
asbasbasbag54
(g70
g56
NtRp3203
(dp3204
g59
(dp3205
sg68
g3179
sg61
(lp3206
g54
(g75
g56
NtRp3207
(dp3208
g59
(dp3209
g79
g80
ssg68
g3203
sg61
(lp3210
g302
asbag54
(g75
g56
NtRp3211
(dp3212
g59
(dp3213
g86
g87
ssg68
g3203
sg61
(lp3214
S':'
asbag54
(g75
g56
NtRp3215
(dp3216
g59
(dp3217
sg68
g3203
sg61
(lp3218
g54
(g55
g56
NtRp3219
(dp3220
g59
(dp3221
g67
I3
ssg68
g3215
sg61
(lp3222
S''
asbasbasbag54
(g70
g56
NtRp3223
(dp3224
g59
(dp3225
sg68
g3179
sg61
(lp3226
g54
(g75
g56
NtRp3227
(dp3228
g59
(dp3229
g79
g80
ssg68
g3223
sg61
(lp3230
g323
asbag54
(g75
g56
NtRp3231
(dp3232
g59
(dp3233
g86
g87
ssg68
g3223
sg61
(lp3234
S':'
asbag54
(g75
g56
NtRp3235
(dp3236
g59
(dp3237
sg68
g3223
sg61
(lp3238
g54
(g55
g56
NtRp3239
(dp3240
g59
(dp3241
g67
I3
ssg68
g3235
sg61
(lp3242
S''
asbasbasbag54
(g70
g56
NtRp3243
(dp3244
g59
(dp3245
sg68
g3179
sg61
(lp3246
g54
(g75
g56
NtRp3247
(dp3248
g59
(dp3249
g79
g80
ssg68
g3243
sg61
(lp3250
g344
asbag54
(g75
g56
NtRp3251
(dp3252
g59
(dp3253
g86
g87
ssg68
g3243
sg61
(lp3254
S':'
asbag54
(g75
g56
NtRp3255
(dp3256
g59
(dp3257
sg68
g3243
sg61
(lp3258
g54
(g55
g56
NtRp3259
(dp3260
g59
(dp3261
g67
I3
ssg68
g3255
sg61
(lp3262
S''
asbasbasbag54
(g70
g56
NtRp3263
(dp3264
g59
(dp3265
sg68
g3179
sg61
(lp3266
g54
(g75
g56
NtRp3267
(dp3268
g59
(dp3269
g79
g80
ssg68
g3263
sg61
(lp3270
g365
asbag54
(g75
g56
NtRp3271
(dp3272
g59
(dp3273
g86
g87
ssg68
g3263
sg61
(lp3274
S':'
asbag54
(g75
g56
NtRp3275
(dp3276
g59
(dp3277
sg68
g3263
sg61
(lp3278
g54
(g55
g56
NtRp3279
(dp3280
g59
(dp3281
g67
I3
ssg68
g3275
sg61
(lp3282
S'/'
asbasbasbag54
(g70
g56
NtRp3283
(dp3284
g59
(dp3285
sg68
g3179
sg61
(lp3286
g54
(g75
g56
NtRp3287
(dp3288
g59
(dp3289
g79
g80
ssg68
g3283
sg61
(lp3290
g386
asbag54
(g75
g56
NtRp3291
(dp3292
g59
(dp3293
g86
g87
ssg68
g3283
sg61
(lp3294
S':'
asbag54
(g75
g56
NtRp3295
(dp3296
g59
(dp3297
sg68
g3283
sg61
(lp3298
g54
(g55
g56
NtRp3299
(dp3300
g59
(dp3301
g67
I3
ssg68
g3295
sg61
(lp3302
S''
asbasbasbag54
(g70
g56
NtRp3303
(dp3304
g59
(dp3305
sg68
g3179
sg61
(lp3306
g54
(g75
g56
NtRp3307
(dp3308
g59
(dp3309
g79
g80
ssg68
g3303
sg61
(lp3310
g407
asbag54
(g75
g56
NtRp3311
(dp3312
g59
(dp3313
g86
g87
ssg68
g3303
sg61
(lp3314
S':'
asbag54
(g75
g56
NtRp3315
(dp3316
g59
(dp3317
sg68
g3303
sg61
(lp3318
g54
(g55
g56
NtRp3319
(dp3320
g59
(dp3321
g67
I3
ssg68
g3315
sg61
(lp3322
S''
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp3323
(dp3324
g59
(dp3325
sg68
g3109
sg61
(lp3326
g54
(g75
g56
NtRp3327
(dp3328
g59
(dp3329
g79
g80
ssg68
g3323
sg61
(lp3330
S'delimiters'
p3331
asbag54
(g75
g56
NtRp3332
(dp3333
g59
(dp3334
g86
g87
ssg68
g3323
sg61
(lp3335
S':'
asbag54
(g75
g56
NtRp3336
(dp3337
g59
(dp3338
sg68
g3323
sg61
(lp3339
g54
(g55
g56
NtRp3340
(dp3341
g59
(dp3342
g67
I5
ssg68
g3336
sg61
(lp3343
g54
(g63
g56
NtRp3344
(dp3345
g59
(dp3346
g67
I4
ssg68
Nsg61
(lp3347
g54
(g70
g56
NtRp3348
(dp3349
g59
(dp3350
sg68
g3344
sg61
(lp3351
g54
(g75
g56
NtRp3352
(dp3353
g59
(dp3354
sg68
g3348
sg61
(lp3355
g54
(g55
g56
NtRp3356
(dp3357
g59
(dp3358
g67
I4
ssg68
g3352
sg61
(lp3359
S'{{'
p3360
asbasbasbag54
(g70
g56
NtRp3361
(dp3362
g59
(dp3363
sg68
g3344
sg61
(lp3364
g54
(g75
g56
NtRp3365
(dp3366
g59
(dp3367
sg68
g3361
sg61
(lp3368
g54
(g55
g56
NtRp3369
(dp3370
g59
(dp3371
g67
I4
ssg68
g3365
sg61
(lp3372
S'}}'
p3373
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3374
(dp3375
g59
(dp3376
sg68
g3109
sg61
(lp3377
g54
(g75
g56
NtRp3378
(dp3379
g59
(dp3380
g79
g80
ssg68
g3374
sg61
(lp3381
S'files'
p3382
asbag54
(g75
g56
NtRp3383
(dp3384
g59
(dp3385
g86
g87
ssg68
g3374
sg61
(lp3386
S':'
asbag54
(g75
g56
NtRp3387
(dp3388
g59
(dp3389
sg68
g3374
sg61
(lp3390
g54
(g55
g56
NtRp3391
(dp3392
g59
(dp3393
g67
I5
ssg68
g3387
sg61
(lp3394
g54
(g63
g56
NtRp3395
(dp3396
g59
(dp3397
g67
I4
ssg68
Nsg61
(lp3398
g54
(g70
g56
NtRp3399
(dp3400
g59
(dp3401
sg68
g3395
sg61
(lp3402
g54
(g75
g56
NtRp3403
(dp3404
g59
(dp3405
sg68
g3399
sg61
(lp3406
g54
(g55
g56
NtRp3407
(dp3408
g59
(dp3409
g67
I4
ssg68
g3403
sg61
(lp3410
S'/admin/static/plugin_multiselect/jquery.dimensions.js'
p3411
asbasbasbag54
(g70
g56
NtRp3412
(dp3413
g59
(dp3414
sg68
g3395
sg61
(lp3415
g54
(g75
g56
NtRp3416
(dp3417
g59
(dp3418
sg68
g3412
sg61
(lp3419
g54
(g55
g56
NtRp3420
(dp3421
g59
(dp3422
g67
I4
ssg68
g3416
sg61
(lp3423
S'/admin/static/plugin_multiselect/jquery.multiselect.js'
p3424
asbasbasbag54
(g70
g56
NtRp3425
(dp3426
g59
(dp3427
sg68
g3395
sg61
(lp3428
g54
(g75
g56
NtRp3429
(dp3430
g59
(dp3431
sg68
g3425
sg61
(lp3432
g54
(g55
g56
NtRp3433
(dp3434
g59
(dp3435
g67
I4
ssg68
g3429
sg61
(lp3436
S'/admin/static/plugin_multiselect/jquery.multiselect.css'
p3437
asbasbasbag54
(g70
g56
NtRp3438
(dp3439
g59
(dp3440
sg68
g3395
sg61
(lp3441
g54
(g75
g56
NtRp3442
(dp3443
g59
(dp3444
sg68
g3438
sg61
(lp3445
g54
(g55
g56
NtRp3446
(dp3447
g59
(dp3448
g67
I4
ssg68
g3442
sg61
(lp3449
S'/admin/static/plugin_multiselect/start.js'
p3450
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3451
(dp3452
g59
(dp3453
sg68
g3109
sg61
(lp3454
g54
(g75
g56
NtRp3455
(dp3456
g59
(dp3457
g79
g80
ssg68
g3451
sg61
(lp3458
S'flash'
p3459
asbag54
(g75
g56
NtRp3460
(dp3461
g59
(dp3462
g86
g87
ssg68
g3451
sg61
(lp3463
S':'
asbag54
(g75
g56
NtRp3464
(dp3465
g59
(dp3466
sg68
g3451
sg61
(lp3467
g54
(g55
g56
NtRp3468
(dp3469
g59
(dp3470
g67
I5
ssg68
g3464
sg61
(lp3471
S''
asbasbasbag54
(g70
g56
NtRp3472
(dp3473
g59
(dp3474
sg68
g3109
sg61
(lp3475
g54
(g75
g56
NtRp3476
(dp3477
g59
(dp3478
g79
g80
ssg68
g3472
sg61
(lp3479
S'generic_patterns'
p3480
asbag54
(g75
g56
NtRp3481
(dp3482
g59
(dp3483
g86
g87
ssg68
g3472
sg61
(lp3484
S':'
asbag54
(g75
g56
NtRp3485
(dp3486
g59
(dp3487
sg68
g3472
sg61
(lp3488
g54
(g55
g56
NtRp3489
(dp3490
g59
(dp3491
g67
I5
ssg68
g3485
sg61
(lp3492
g54
(g63
g56
NtRp3493
(dp3494
g59
(dp3495
g67
I4
ssg68
Nsg61
(lp3496
sbasbasbasbag54
(g70
g56
NtRp3497
(dp3498
g59
(dp3499
sg68
g3109
sg61
(lp3500
g54
(g75
g56
NtRp3501
(dp3502
g59
(dp3503
g79
g80
ssg68
g3497
sg61
(lp3504
S'headers'
p3505
asbag54
(g75
g56
NtRp3506
(dp3507
g59
(dp3508
g86
g87
ssg68
g3497
sg61
(lp3509
S':'
asbag54
(g75
g56
NtRp3510
(dp3511
g59
(dp3512
sg68
g3497
sg61
(lp3513
g54
(g55
g56
NtRp3514
(dp3515
g59
(dp3516
g67
I5
ssg68
g3510
sg61
(lp3517
g54
(g63
g56
NtRp3518
(dp3519
g59
(dp3520
g67
I4
ssg68
Nsg61
(lp3521
g54
(g70
g56
NtRp3522
(dp3523
g59
(dp3524
sg68
g3518
sg61
(lp3525
g54
(g75
g56
NtRp3526
(dp3527
g59
(dp3528
g79
g80
ssg68
g3522
sg61
(lp3529
S'Cache-Control'
p3530
asbag54
(g75
g56
NtRp3531
(dp3532
g59
(dp3533
g86
g87
ssg68
g3522
sg61
(lp3534
S':'
asbag54
(g75
g56
NtRp3535
(dp3536
g59
(dp3537
sg68
g3522
sg61
(lp3538
g54
(g55
g56
NtRp3539
(dp3540
g59
(dp3541
g67
I4
ssg68
g3535
sg61
(lp3542
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3543
asbasbasbag54
(g70
g56
NtRp3544
(dp3545
g59
(dp3546
sg68
g3518
sg61
(lp3547
g54
(g75
g56
NtRp3548
(dp3549
g59
(dp3550
g79
g80
ssg68
g3544
sg61
(lp3551
S'Content-Type'
p3552
asbag54
(g75
g56
NtRp3553
(dp3554
g59
(dp3555
g86
g87
ssg68
g3544
sg61
(lp3556
S':'
asbag54
(g75
g56
NtRp3557
(dp3558
g59
(dp3559
sg68
g3544
sg61
(lp3560
g54
(g55
g56
NtRp3561
(dp3562
g59
(dp3563
g67
I4
ssg68
g3557
sg61
(lp3564
S'text/html; charset=utf-8'
p3565
asbasbasbag54
(g70
g56
NtRp3566
(dp3567
g59
(dp3568
sg68
g3518
sg61
(lp3569
g54
(g75
g56
NtRp3570
(dp3571
g59
(dp3572
g79
g80
ssg68
g3566
sg61
(lp3573
S'Expires'
p3574
asbag54
(g75
g56
NtRp3575
(dp3576
g59
(dp3577
g86
g87
ssg68
g3566
sg61
(lp3578
S':'
asbag54
(g75
g56
NtRp3579
(dp3580
g59
(dp3581
sg68
g3566
sg61
(lp3582
g54
(g55
g56
NtRp3583
(dp3584
g59
(dp3585
g67
I4
ssg68
g3579
sg61
(lp3586
S'Sun, 11 Mar 2012 02:17:11 GMT'
p3587
asbasbasbag54
(g70
g56
NtRp3588
(dp3589
g59
(dp3590
sg68
g3518
sg61
(lp3591
g54
(g75
g56
NtRp3592
(dp3593
g59
(dp3594
g79
g80
ssg68
g3588
sg61
(lp3595
S'Pragma'
p3596
asbag54
(g75
g56
NtRp3597
(dp3598
g59
(dp3599
g86
g87
ssg68
g3588
sg61
(lp3600
S':'
asbag54
(g75
g56
NtRp3601
(dp3602
g59
(dp3603
sg68
g3588
sg61
(lp3604
g54
(g55
g56
NtRp3605
(dp3606
g59
(dp3607
g67
I4
ssg68
g3601
sg61
(lp3608
S'no-cache'
p3609
asbasbasbag54
(g70
g56
NtRp3610
(dp3611
g59
(dp3612
sg68
g3518
sg61
(lp3613
g54
(g75
g56
NtRp3614
(dp3615
g59
(dp3616
g79
g80
ssg68
g3610
sg61
(lp3617
S'X-Powered-By'
p3618
asbag54
(g75
g56
NtRp3619
(dp3620
g59
(dp3621
g86
g87
ssg68
g3610
sg61
(lp3622
S':'
asbag54
(g75
g56
NtRp3623
(dp3624
g59
(dp3625
sg68
g3610
sg61
(lp3626
g54
(g55
g56
NtRp3627
(dp3628
g59
(dp3629
g67
I4
ssg68
g3623
sg61
(lp3630
S'web2py'
p3631
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3632
(dp3633
g59
(dp3634
sg68
g3109
sg61
(lp3635
g54
(g75
g56
NtRp3636
(dp3637
g59
(dp3638
g79
g80
ssg68
g3632
sg61
(lp3639
S'menu'
p3640
asbag54
(g75
g56
NtRp3641
(dp3642
g59
(dp3643
g86
g87
ssg68
g3632
sg61
(lp3644
S':'
asbag54
(g75
g56
NtRp3645
(dp3646
g59
(dp3647
sg68
g3632
sg61
(lp3648
g54
(g55
g56
NtRp3649
(dp3650
g59
(dp3651
g67
I5
ssg68
g3645
sg61
(lp3652
g54
(g63
g56
NtRp3653
(dp3654
g59
(dp3655
g67
I4
ssg68
Nsg61
(lp3656
g54
(g70
g56
NtRp3657
(dp3658
g59
(dp3659
sg68
g3653
sg61
(lp3660
g54
(g75
g56
NtRp3661
(dp3662
g59
(dp3663
sg68
g3657
sg61
(lp3664
g54
(g55
g56
NtRp3665
(dp3666
g59
(dp3667
g67
I4
ssg68
g3661
sg61
(lp3668
g54
(g63
g56
NtRp3669
(dp3670
g59
(dp3671
g67
I3
ssg68
Nsg61
(lp3672
g54
(g70
g56
NtRp3673
(dp3674
g59
(dp3675
sg68
g3669
sg61
(lp3676
g54
(g75
g56
NtRp3677
(dp3678
g59
(dp3679
sg68
g3673
sg61
(lp3680
g54
(g55
g56
NtRp3681
(dp3682
g59
(dp3683
g67
I3
ssg68
g3677
sg61
(lp3684
cgluon.languages
lazyT_unpickle
p3685
(S's\x04\x00\x00\x00Site'
tRp3686
asbasbasbag54
(g70
g56
NtRp3687
(dp3688
g59
(dp3689
sg68
g3669
sg61
(lp3690
g54
(g75
g56
NtRp3691
(dp3692
g59
(dp3693
sg68
g3687
sg61
(lp3694
g54
(g55
g56
NtRp3695
(dp3696
g59
(dp3697
g67
I3
ssg68
g3691
sg61
(lp3698
g765
asbasbasbag54
(g70
g56
NtRp3699
(dp3700
g59
(dp3701
sg68
g3669
sg61
(lp3702
g54
(g75
g56
NtRp3703
(dp3704
g59
(dp3705
sg68
g3699
sg61
(lp3706
g54
(g55
g56
NtRp3707
(dp3708
g59
(dp3709
g67
I3
ssg68
g3703
sg61
(lp3710
S'/admin/default/site'
p3711
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3712
(dp3713
g59
(dp3714
sg68
g3653
sg61
(lp3715
g54
(g75
g56
NtRp3716
(dp3717
g59
(dp3718
sg68
g3712
sg61
(lp3719
g54
(g55
g56
NtRp3720
(dp3721
g59
(dp3722
g67
I4
ssg68
g3716
sg61
(lp3723
g54
(g63
g56
NtRp3724
(dp3725
g59
(dp3726
g67
I3
ssg68
Nsg61
(lp3727
g54
(g70
g56
NtRp3728
(dp3729
g59
(dp3730
sg68
g3724
sg61
(lp3731
g54
(g75
g56
NtRp3732
(dp3733
g59
(dp3734
sg68
g3728
sg61
(lp3735
g54
(g55
g56
NtRp3736
(dp3737
g59
(dp3738
g67
I3
ssg68
g3732
sg61
(lp3739
g3685
(S's\x04\x00\x00\x00Edit'
tRp3740
asbasbasbag54
(g70
g56
NtRp3741
(dp3742
g59
(dp3743
sg68
g3724
sg61
(lp3744
g54
(g75
g56
NtRp3745
(dp3746
g59
(dp3747
sg68
g3741
sg61
(lp3748
g54
(g55
g56
NtRp3749
(dp3750
g59
(dp3751
g67
I3
ssg68
g3745
sg61
(lp3752
g765
asbasbasbag54
(g70
g56
NtRp3753
(dp3754
g59
(dp3755
sg68
g3724
sg61
(lp3756
g54
(g75
g56
NtRp3757
(dp3758
g59
(dp3759
sg68
g3753
sg61
(lp3760
g54
(g55
g56
NtRp3761
(dp3762
g59
(dp3763
g67
I3
ssg68
g3757
sg61
(lp3764
S'/admin/default/design/README'
p3765
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3766
(dp3767
g59
(dp3768
sg68
g3653
sg61
(lp3769
g54
(g75
g56
NtRp3770
(dp3771
g59
(dp3772
sg68
g3766
sg61
(lp3773
g54
(g55
g56
NtRp3774
(dp3775
g59
(dp3776
g67
I4
ssg68
g3770
sg61
(lp3777
g54
(g63
g56
NtRp3778
(dp3779
g59
(dp3780
g67
I3
ssg68
Nsg61
(lp3781
g54
(g70
g56
NtRp3782
(dp3783
g59
(dp3784
sg68
g3778
sg61
(lp3785
g54
(g75
g56
NtRp3786
(dp3787
g59
(dp3788
sg68
g3782
sg61
(lp3789
g54
(g55
g56
NtRp3790
(dp3791
g59
(dp3792
g67
I3
ssg68
g3786
sg61
(lp3793
g3685
(S's\x05\x00\x00\x00About'
tRp3794
asbasbasbag54
(g70
g56
NtRp3795
(dp3796
g59
(dp3797
sg68
g3778
sg61
(lp3798
g54
(g75
g56
NtRp3799
(dp3800
g59
(dp3801
sg68
g3795
sg61
(lp3802
g54
(g55
g56
NtRp3803
(dp3804
g59
(dp3805
g67
I3
ssg68
g3799
sg61
(lp3806
g765
asbasbasbag54
(g70
g56
NtRp3807
(dp3808
g59
(dp3809
sg68
g3778
sg61
(lp3810
g54
(g75
g56
NtRp3811
(dp3812
g59
(dp3813
sg68
g3807
sg61
(lp3814
g54
(g55
g56
NtRp3815
(dp3816
g59
(dp3817
g67
I3
ssg68
g3811
sg61
(lp3818
S'/admin/default/about/README'
p3819
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3820
(dp3821
g59
(dp3822
sg68
g3653
sg61
(lp3823
g54
(g75
g56
NtRp3824
(dp3825
g59
(dp3826
sg68
g3820
sg61
(lp3827
g54
(g55
g56
NtRp3828
(dp3829
g59
(dp3830
g67
I4
ssg68
g3824
sg61
(lp3831
g54
(g63
g56
NtRp3832
(dp3833
g59
(dp3834
g67
I3
ssg68
Nsg61
(lp3835
g54
(g70
g56
NtRp3836
(dp3837
g59
(dp3838
sg68
g3832
sg61
(lp3839
g54
(g75
g56
NtRp3840
(dp3841
g59
(dp3842
sg68
g3836
sg61
(lp3843
g54
(g55
g56
NtRp3844
(dp3845
g59
(dp3846
g67
I3
ssg68
g3840
sg61
(lp3847
g3685
(S's\x06\x00\x00\x00Errors'
tRp3848
asbasbasbag54
(g70
g56
NtRp3849
(dp3850
g59
(dp3851
sg68
g3832
sg61
(lp3852
g54
(g75
g56
NtRp3853
(dp3854
g59
(dp3855
sg68
g3849
sg61
(lp3856
g54
(g55
g56
NtRp3857
(dp3858
g59
(dp3859
g67
I3
ssg68
g3853
sg61
(lp3860
g765
asbasbasbag54
(g70
g56
NtRp3861
(dp3862
g59
(dp3863
sg68
g3832
sg61
(lp3864
g54
(g75
g56
NtRp3865
(dp3866
g59
(dp3867
sg68
g3861
sg61
(lp3868
g54
(g55
g56
NtRp3869
(dp3870
g59
(dp3871
g67
I3
ssg68
g3865
sg61
(lp3872
S'/admin/default/errors/README'
p3873
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3874
(dp3875
g59
(dp3876
sg68
g3653
sg61
(lp3877
g54
(g75
g56
NtRp3878
(dp3879
g59
(dp3880
sg68
g3874
sg61
(lp3881
g54
(g55
g56
NtRp3882
(dp3883
g59
(dp3884
g67
I4
ssg68
g3878
sg61
(lp3885
g54
(g63
g56
NtRp3886
(dp3887
g59
(dp3888
g67
I3
ssg68
Nsg61
(lp3889
g54
(g70
g56
NtRp3890
(dp3891
g59
(dp3892
sg68
g3886
sg61
(lp3893
g54
(g75
g56
NtRp3894
(dp3895
g59
(dp3896
sg68
g3890
sg61
(lp3897
g54
(g55
g56
NtRp3898
(dp3899
g59
(dp3900
g67
I3
ssg68
g3894
sg61
(lp3901
g3685
(S's\n\x00\x00\x00Versioning'
tRp3902
asbasbasbag54
(g70
g56
NtRp3903
(dp3904
g59
(dp3905
sg68
g3886
sg61
(lp3906
g54
(g75
g56
NtRp3907
(dp3908
g59
(dp3909
sg68
g3903
sg61
(lp3910
g54
(g55
g56
NtRp3911
(dp3912
g59
(dp3913
g67
I3
ssg68
g3907
sg61
(lp3914
g765
asbasbasbag54
(g70
g56
NtRp3915
(dp3916
g59
(dp3917
sg68
g3886
sg61
(lp3918
g54
(g75
g56
NtRp3919
(dp3920
g59
(dp3921
sg68
g3915
sg61
(lp3922
g54
(g55
g56
NtRp3923
(dp3924
g59
(dp3925
g67
I3
ssg68
g3919
sg61
(lp3926
S'/admin/mercurial/commit/README'
p3927
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3928
(dp3929
g59
(dp3930
sg68
g3653
sg61
(lp3931
g54
(g75
g56
NtRp3932
(dp3933
g59
(dp3934
sg68
g3928
sg61
(lp3935
g54
(g55
g56
NtRp3936
(dp3937
g59
(dp3938
g67
I4
ssg68
g3932
sg61
(lp3939
g54
(g63
g56
NtRp3940
(dp3941
g59
(dp3942
g67
I3
ssg68
Nsg61
(lp3943
g54
(g70
g56
NtRp3944
(dp3945
g59
(dp3946
sg68
g3940
sg61
(lp3947
g54
(g75
g56
NtRp3948
(dp3949
g59
(dp3950
sg68
g3944
sg61
(lp3951
g54
(g55
g56
NtRp3952
(dp3953
g59
(dp3954
g67
I3
ssg68
g3948
sg61
(lp3955
g3685
(S's\x06\x00\x00\x00Logout'
tRp3956
asbasbasbag54
(g70
g56
NtRp3957
(dp3958
g59
(dp3959
sg68
g3940
sg61
(lp3960
g54
(g75
g56
NtRp3961
(dp3962
g59
(dp3963
sg68
g3957
sg61
(lp3964
g54
(g55
g56
NtRp3965
(dp3966
g59
(dp3967
g67
I3
ssg68
g3961
sg61
(lp3968
g765
asbasbasbag54
(g70
g56
NtRp3969
(dp3970
g59
(dp3971
sg68
g3940
sg61
(lp3972
g54
(g75
g56
NtRp3973
(dp3974
g59
(dp3975
sg68
g3969
sg61
(lp3976
g54
(g55
g56
NtRp3977
(dp3978
g59
(dp3979
g67
I3
ssg68
g3973
sg61
(lp3980
S'/admin/default/logout'
p3981
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3982
(dp3983
g59
(dp3984
sg68
g3653
sg61
(lp3985
g54
(g75
g56
NtRp3986
(dp3987
g59
(dp3988
sg68
g3982
sg61
(lp3989
g54
(g55
g56
NtRp3990
(dp3991
g59
(dp3992
g67
I4
ssg68
g3986
sg61
(lp3993
g54
(g63
g56
NtRp3994
(dp3995
g59
(dp3996
g67
I3
ssg68
Nsg61
(lp3997
g54
(g70
g56
NtRp3998
(dp3999
g59
(dp4000
sg68
g3994
sg61
(lp4001
g54
(g75
g56
NtRp4002
(dp4003
g59
(dp4004
sg68
g3998
sg61
(lp4005
g54
(g55
g56
NtRp4006
(dp4007
g59
(dp4008
g67
I3
ssg68
g4002
sg61
(lp4009
g3685
(S's\x05\x00\x00\x00Debug'
tRp4010
asbasbasbag54
(g70
g56
NtRp4011
(dp4012
g59
(dp4013
sg68
g3994
sg61
(lp4014
g54
(g75
g56
NtRp4015
(dp4016
g59
(dp4017
sg68
g4011
sg61
(lp4018
g54
(g55
g56
NtRp4019
(dp4020
g59
(dp4021
g67
I3
ssg68
g4015
sg61
(lp4022
g765
asbasbasbag54
(g70
g56
NtRp4023
(dp4024
g59
(dp4025
sg68
g3994
sg61
(lp4026
g54
(g75
g56
NtRp4027
(dp4028
g59
(dp4029
sg68
g4023
sg61
(lp4030
g54
(g55
g56
NtRp4031
(dp4032
g59
(dp4033
g67
I3
ssg68
g4027
sg61
(lp4034
S'/admin/debug/interact'
p4035
asbasbasbasbasbasbasbag54
(g70
g56
NtRp4036
(dp4037
g59
(dp4038
sg68
g3653
sg61
(lp4039
g54
(g75
g56
NtRp4040
(dp4041
g59
(dp4042
sg68
g4036
sg61
(lp4043
g54
(g55
g56
NtRp4044
(dp4045
g59
(dp4046
g67
I4
ssg68
g4040
sg61
(lp4047
g54
(g63
g56
NtRp4048
(dp4049
g59
(dp4050
g67
I3
ssg68
Nsg61
(lp4051
g54
(g70
g56
NtRp4052
(dp4053
g59
(dp4054
sg68
g4048
sg61
(lp4055
g54
(g75
g56
NtRp4056
(dp4057
g59
(dp4058
sg68
g4052
sg61
(lp4059
g54
(g55
g56
NtRp4060
(dp4061
g59
(dp4062
g67
I3
ssg68
g4056
sg61
(lp4063
g3685
(S's\x04\x00\x00\x00Help'
tRp4064
asbasbasbag54
(g70
g56
NtRp4065
(dp4066
g59
(dp4067
sg68
g4048
sg61
(lp4068
g54
(g75
g56
NtRp4069
(dp4070
g59
(dp4071
sg68
g4065
sg61
(lp4072
g54
(g55
g56
NtRp4073
(dp4074
g59
(dp4075
g67
I3
ssg68
g4069
sg61
(lp4076
g765
asbasbasbag54
(g70
g56
NtRp4077
(dp4078
g59
(dp4079
sg68
g4048
sg61
(lp4080
g54
(g75
g56
NtRp4081
(dp4082
g59
(dp4083
sg68
g4077
sg61
(lp4084
g54
(g55
g56
NtRp4085
(dp4086
g59
(dp4087
g67
I3
ssg68
g4081
sg61
(lp4088
S'http://web2py.com/examples'
p4089
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp4090
(dp4091
g59
(dp4092
sg68
g3109
sg61
(lp4093
g54
(g75
g56
NtRp4094
(dp4095
g59
(dp4096
g79
g80
ssg68
g4090
sg61
(lp4097
S'meta'
p4098
asbag54
(g75
g56
NtRp4099
(dp4100
g59
(dp4101
g86
g87
ssg68
g4090
sg61
(lp4102
S':'
asbag54
(g75
g56
NtRp4103
(dp4104
g59
(dp4105
sg68
g4090
sg61
(lp4106
g54
(g55
g56
NtRp4107
(dp4108
g59
(dp4109
g67
I5
ssg68
g4103
sg61
(lp4110
g54
(g63
g56
NtRp4111
(dp4112
g59
(dp4113
g67
I4
ssg68
Nsg61
(lp4114
sbasbasbasbag54
(g70
g56
NtRp4115
(dp4116
g59
(dp4117
sg68
g3109
sg61
(lp4118
g54
(g75
g56
NtRp4119
(dp4120
g59
(dp4121
g79
g80
ssg68
g4115
sg61
(lp4122
S'postprocessing'
p4123
asbag54
(g75
g56
NtRp4124
(dp4125
g59
(dp4126
g86
g87
ssg68
g4115
sg61
(lp4127
S':'
asbag54
(g75
g56
NtRp4128
(dp4129
g59
(dp4130
sg68
g4115
sg61
(lp4131
g54
(g55
g56
NtRp4132
(dp4133
g59
(dp4134
g67
I5
ssg68
g4128
sg61
(lp4135
g54
(g63
g56
NtRp4136
(dp4137
g59
(dp4138
g67
I4
ssg68
Nsg61
(lp4139
sbasbasbasbag54
(g70
g56
NtRp4140
(dp4141
g59
(dp4142
sg68
g3109
sg61
(lp4143
g54
(g75
g56
NtRp4144
(dp4145
g59
(dp4146
g79
g80
ssg68
g4140
sg61
(lp4147
S'session_file'
p4148
asbag54
(g75
g56
NtRp4149
(dp4150
g59
(dp4151
g86
g87
ssg68
g4140
sg61
(lp4152
S':'
asbag54
(g75
g56
NtRp4153
(dp4154
g59
(dp4155
sg68
g4140
sg61
(lp4156
g54
(g55
g56
NtRp4157
(dp4158
g59
(dp4159
g67
I5
ssg68
g4153
sg61
(lp4160
S"<open file 'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\applications\\admin\\sessions\\127.0.0.1-bf0b0813-7a73-44ef-8add-4ccb370d842d', mode 'rb+' at 0x0604C260>"
p4161
asbasbasbag54
(g70
g56
NtRp4162
(dp4163
g59
(dp4164
sg68
g3109
sg61
(lp4165
g54
(g75
g56
NtRp4166
(dp4167
g59
(dp4168
g79
g80
ssg68
g4162
sg61
(lp4169
S'session_filename'
p4170
asbag54
(g75
g56
NtRp4171
(dp4172
g59
(dp4173
g86
g87
ssg68
g4162
sg61
(lp4174
S':'
asbag54
(g75
g56
NtRp4175
(dp4176
g59
(dp4177
sg68
g4162
sg61
(lp4178
g54
(g55
g56
NtRp4179
(dp4180
g59
(dp4181
g67
I5
ssg68
g4175
sg61
(lp4182
S'C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\applications\\admin\\sessions\\127.0.0.1-bf0b0813-7a73-44ef-8add-4ccb370d842d'
p4183
asbasbasbag54
(g70
g56
NtRp4184
(dp4185
g59
(dp4186
sg68
g3109
sg61
(lp4187
g54
(g75
g56
NtRp4188
(dp4189
g59
(dp4190
g79
g80
ssg68
g4184
sg61
(lp4191
S'session_id'
p4192
asbag54
(g75
g56
NtRp4193
(dp4194
g59
(dp4195
g86
g87
ssg68
g4184
sg61
(lp4196
S':'
asbag54
(g75
g56
NtRp4197
(dp4198
g59
(dp4199
sg68
g4184
sg61
(lp4200
g54
(g55
g56
NtRp4201
(dp4202
g59
(dp4203
g67
I5
ssg68
g4197
sg61
(lp4204
S'127.0.0.1-bf0b0813-7a73-44ef-8add-4ccb370d842d'
p4205
asbasbasbag54
(g70
g56
NtRp4206
(dp4207
g59
(dp4208
sg68
g3109
sg61
(lp4209
g54
(g75
g56
NtRp4210
(dp4211
g59
(dp4212
g79
g80
ssg68
g4206
sg61
(lp4213
S'session_id_name'
p4214
asbag54
(g75
g56
NtRp4215
(dp4216
g59
(dp4217
g86
g87
ssg68
g4206
sg61
(lp4218
S':'
asbag54
(g75
g56
NtRp4219
(dp4220
g59
(dp4221
sg68
g4206
sg61
(lp4222
g54
(g55
g56
NtRp4223
(dp4224
g59
(dp4225
g67
I5
ssg68
g4219
sg61
(lp4226
g3166
asbasbasbag54
(g70
g56
NtRp4227
(dp4228
g59
(dp4229
sg68
g3109
sg61
(lp4230
g54
(g75
g56
NtRp4231
(dp4232
g59
(dp4233
g79
g80
ssg68
g4227
sg61
(lp4234
S'session_locked'
p4235
asbag54
(g75
g56
NtRp4236
(dp4237
g59
(dp4238
g86
g87
ssg68
g4227
sg61
(lp4239
S':'
asbag54
(g75
g56
NtRp4240
(dp4241
g59
(dp4242
sg68
g4227
sg61
(lp4243
g54
(g55
g56
NtRp4244
(dp4245
g59
(dp4246
g67
I5
ssg68
g4240
sg61
(lp4247
g97
asbasbasbag54
(g70
g56
NtRp4248
(dp4249
g59
(dp4250
sg68
g3109
sg61
(lp4251
g54
(g75
g56
NtRp4252
(dp4253
g59
(dp4254
g79
g80
ssg68
g4248
sg61
(lp4255
S'session_new'
p4256
asbag54
(g75
g56
NtRp4257
(dp4258
g59
(dp4259
g86
g87
ssg68
g4248
sg61
(lp4260
S':'
asbag54
(g75
g56
NtRp4261
(dp4262
g59
(dp4263
sg68
g4248
sg61
(lp4264
g54
(g55
g56
NtRp4265
(dp4266
g59
(dp4267
g67
I5
ssg68
g4261
sg61
(lp4268
g765
asbasbasbag54
(g70
g56
NtRp4269
(dp4270
g59
(dp4271
sg68
g3109
sg61
(lp4272
g54
(g75
g56
NtRp4273
(dp4274
g59
(dp4275
g79
g80
ssg68
g4269
sg61
(lp4276
S'status'
p4277
asbag54
(g75
g56
NtRp4278
(dp4279
g59
(dp4280
g86
g87
ssg68
g4269
sg61
(lp4281
S':'
asbag54
(g75
g56
NtRp4282
(dp4283
g59
(dp4284
sg68
g4269
sg61
(lp4285
g54
(g55
g56
NtRp4286
(dp4287
g59
(dp4288
g67
I5
ssg68
g4282
sg61
(lp4289
S'200'
p4290
asbasbasbag54
(g70
g56
NtRp4291
(dp4292
g59
(dp4293
sg68
g3109
sg61
(lp4294
g54
(g75
g56
NtRp4295
(dp4296
g59
(dp4297
g79
g80
ssg68
g4291
sg61
(lp4298
S'subtitle'
p4299
asbag54
(g75
g56
NtRp4300
(dp4301
g59
(dp4302
g86
g87
ssg68
g4291
sg61
(lp4303
S':'
asbag54
(g75
g56
NtRp4304
(dp4305
g59
(dp4306
sg68
g4291
sg61
(lp4307
g54
(g55
g56
NtRp4308
(dp4309
g59
(dp4310
g67
I5
ssg68
g4304
sg61
(lp4311
S'admin'
p4312
asbasbasbag54
(g70
g56
NtRp4313
(dp4314
g59
(dp4315
sg68
g3109
sg61
(lp4316
g54
(g75
g56
NtRp4317
(dp4318
g59
(dp4319
g79
g80
ssg68
g4313
sg61
(lp4320
S'title'
p4321
asbag54
(g75
g56
NtRp4322
(dp4323
g59
(dp4324
g86
g87
ssg68
g4313
sg61
(lp4325
S':'
asbag54
(g75
g56
NtRp4326
(dp4327
g59
(dp4328
sg68
g4313
sg61
(lp4329
g54
(g55
g56
NtRp4330
(dp4331
g59
(dp4332
g67
I5
ssg68
g4326
sg61
(lp4333
S'enable README'
p4334
asbasbasbag54
(g70
g56
NtRp4335
(dp4336
g59
(dp4337
sg68
g3109
sg61
(lp4338
g54
(g75
g56
NtRp4339
(dp4340
g59
(dp4341
g79
g80
ssg68
g4335
sg61
(lp4342
g2234
asbag54
(g75
g56
NtRp4343
(dp4344
g59
(dp4345
g86
g87
ssg68
g4335
sg61
(lp4346
S':'
asbag54
(g75
g56
NtRp4347
(dp4348
g59
(dp4349
sg68
g4335
sg61
(lp4350
g54
(g55
g56
NtRp4351
(dp4352
g59
(dp4353
g67
I5
ssg68
g4347
sg61
(lp4354
g2247
asbasbasbag54
(g70
g56
NtRp4355
(dp4356
g59
(dp4357
sg68
g3109
sg61
(lp4358
g54
(g75
g56
NtRp4359
(dp4360
g59
(dp4361
g79
g80
ssg68
g4355
sg61
(lp4362
S'view'
p4363
asbag54
(g75
g56
NtRp4364
(dp4365
g59
(dp4366
g86
g87
ssg68
g4355
sg61
(lp4367
S':'
asbag54
(g75
g56
NtRp4368
(dp4369
g59
(dp4370
sg68
g4355
sg61
(lp4371
g54
(g55
g56
NtRp4372
(dp4373
g59
(dp4374
g67
I5
ssg68
g4368
sg61
(lp4375
S'default/enable.html'
p4376
asbasbasbasbasbsS'locals'
p4377
(dp4378
S'app'
p4379
S"'README'"
p4380
sg34
S"r'C:/Users/Bussiere/Dropbox/Projets/Yuki/web2py/applications/README\\DISABLED'"
p4381
sssS'traceback'
p4382
S'Traceback (most recent call last):\n  File "gluon/restricted.py", line 205, in restricted\n  File "C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\applications\\admin\\controllers/default.py", line 1352, in <module>\n  File "gluon/globals.py", line 173, in <lambda>\n  File "C:\\Users\\Bussiere\\Dropbox\\Projets\\Yuki\\web2py\\applications\\admin\\controllers/default.py", line 344, in enable\nIOError: [Errno 2] No such file or directory: \'C:/Users/Bussiere/Dropbox/Projets/Yuki/web2py/applications/README\\\\DISABLED\'\n'
p4383
s.